// Code generated from ./promptdslcore/grammar/PromptDSLLexer.g4 by ANTLR 4.13.2. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type PromptDSLLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var PromptDSLLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func promptdsllexerLexerInit() {
	staticData := &PromptDSLLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE", "CODE_BLOCK",
	}
	staticData.LiteralNames = []string{
		"", "'string'", "'float'", "'int'", "'prompt'", "'params'", "'system'",
		"'user'", "'note'", "'input'", "'output'", "'format'", "'type'", "'struct'",
		"'before'", "'schema'", "'parse'", "'jsonfix'", "'markdown'", "'if'",
		"'else'", "'outputspec'", "", "", "", "'{'", "", "'('", "')'", "':'",
		"'='", "','", "'.'", "'=='", "'!='", "'@'", "'md'", "'json'", "'['",
		"']'", "", "", "", "", "'|'", "';'", "'+'",
	}
	staticData.SymbolicNames = []string{
		"", "STRING_TYPE", "FLOAT_TYPE", "INT_TYPE", "PROMPT", "PARAMS", "SYSTEM",
		"USER", "NOTE", "INPUT", "OUTPUT", "FORMAT", "TYPE", "STRUCT", "BEFORE",
		"SCHEMA", "PARSE", "JSONFIX", "MARKDOWN", "IF", "ELSE", "OUTPUTSPEC",
		"FIX", "AFTER", "ARRAY_OUTPUTSPEC", "LBRACE", "RBRACE", "LPAREN", "RPAREN",
		"COLON", "EQUAL", "COMMA", "DOT", "EQEQ", "NOTEQ", "AT", "MD", "JSON",
		"LBRACK", "RBRACK", "ID", "STRING", "NUMBER", "BOOL", "PIPE", "SEMI",
		"PLUS", "WS", "LINE_COMMENT", "BLOCK_COMMENT", "CODE_STRING", "CODE_TEXT",
	}
	staticData.RuleNames = []string{
		"STRING_TYPE", "FLOAT_TYPE", "INT_TYPE", "PROMPT", "PARAMS", "SYSTEM",
		"USER", "NOTE", "INPUT", "OUTPUT", "FORMAT", "TYPE", "STRUCT", "BEFORE",
		"SCHEMA", "PARSE", "JSONFIX", "MARKDOWN", "IF", "ELSE", "OUTPUTSPEC",
		"FIX", "AFTER", "ARRAY_OUTPUTSPEC", "LBRACE", "RBRACE", "LPAREN", "RPAREN",
		"COLON", "EQUAL", "COMMA", "DOT", "EQEQ", "NOTEQ", "AT", "MD", "JSON",
		"LBRACK", "RBRACK", "ID", "STRING", "NUMBER", "BOOL", "PIPE", "SEMI",
		"PLUS", "WS", "LINE_COMMENT", "BLOCK_COMMENT", "CODE_LBRACE", "CODE_RBRACE",
		"CODE_STRING", "CODE_STRING_CHAR", "CODE_TEXT",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 51, 430, 6, -1, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3,
		7, 3, 2, 4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9,
		7, 9, 2, 10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7,
		14, 2, 15, 7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19,
		2, 20, 7, 20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2,
		25, 7, 25, 2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30,
		7, 30, 2, 31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7,
		35, 2, 36, 7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40,
		2, 41, 7, 41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2,
		46, 7, 46, 2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51,
		7, 51, 2, 52, 7, 52, 2, 53, 7, 53, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
		1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 3,
		1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4,
		1, 4, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6,
		1, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8,
		1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 10, 1,
		10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12,
		1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1,
		13, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15,
		1, 15, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1,
		16, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 18,
		1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1, 20, 1,
		20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21,
		1, 21, 1, 21, 5, 21, 252, 8, 21, 10, 21, 12, 21, 255, 9, 21, 1, 21, 1,
		21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 5, 22,
		268, 8, 22, 10, 22, 12, 22, 271, 9, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1,
		23, 1, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 25, 1, 25, 1, 26, 1, 26, 1, 27,
		1, 27, 1, 28, 1, 28, 1, 29, 1, 29, 1, 30, 1, 30, 1, 31, 1, 31, 1, 32, 1,
		32, 1, 32, 1, 33, 1, 33, 1, 33, 1, 34, 1, 34, 1, 35, 1, 35, 1, 35, 1, 36,
		1, 36, 1, 36, 1, 36, 1, 36, 1, 37, 1, 37, 1, 38, 1, 38, 1, 39, 1, 39, 5,
		39, 319, 8, 39, 10, 39, 12, 39, 322, 9, 39, 1, 40, 1, 40, 1, 40, 1, 40,
		5, 40, 328, 8, 40, 10, 40, 12, 40, 331, 9, 40, 1, 40, 1, 40, 1, 41, 3,
		41, 336, 8, 41, 1, 41, 4, 41, 339, 8, 41, 11, 41, 12, 41, 340, 1, 41, 1,
		41, 4, 41, 345, 8, 41, 11, 41, 12, 41, 346, 3, 41, 349, 8, 41, 1, 42, 1,
		42, 1, 42, 1, 42, 1, 42, 1, 42, 1, 42, 1, 42, 1, 42, 3, 42, 360, 8, 42,
		1, 43, 1, 43, 1, 44, 1, 44, 1, 45, 1, 45, 1, 46, 4, 46, 369, 8, 46, 11,
		46, 12, 46, 370, 1, 46, 1, 46, 1, 47, 1, 47, 1, 47, 1, 47, 5, 47, 379,
		8, 47, 10, 47, 12, 47, 382, 9, 47, 1, 47, 1, 47, 1, 48, 1, 48, 1, 48, 1,
		48, 5, 48, 390, 8, 48, 10, 48, 12, 48, 393, 9, 48, 1, 48, 1, 48, 1, 48,
		1, 48, 1, 48, 1, 49, 1, 49, 1, 49, 1, 49, 1, 49, 1, 50, 1, 50, 1, 50, 1,
		50, 1, 50, 1, 51, 1, 51, 5, 51, 412, 8, 51, 10, 51, 12, 51, 415, 9, 51,
		1, 51, 1, 51, 1, 52, 1, 52, 1, 52, 1, 52, 1, 52, 3, 52, 424, 8, 52, 1,
		53, 4, 53, 427, 8, 53, 11, 53, 12, 53, 428, 1, 391, 0, 54, 2, 1, 4, 2,
		6, 3, 8, 4, 10, 5, 12, 6, 14, 7, 16, 8, 18, 9, 20, 10, 22, 11, 24, 12,
		26, 13, 28, 14, 30, 15, 32, 16, 34, 17, 36, 18, 38, 19, 40, 20, 42, 21,
		44, 22, 46, 23, 48, 24, 50, 25, 52, 26, 54, 27, 56, 28, 58, 29, 60, 30,
		62, 31, 64, 32, 66, 33, 68, 34, 70, 35, 72, 36, 74, 37, 76, 38, 78, 39,
		80, 40, 82, 41, 84, 42, 86, 43, 88, 44, 90, 45, 92, 46, 94, 47, 96, 48,
		98, 49, 100, 0, 102, 0, 104, 50, 106, 0, 108, 51, 2, 0, 1, 8, 3, 0, 65,
		90, 95, 95, 97, 122, 4, 0, 48, 57, 65, 90, 95, 95, 97, 122, 2, 0, 34, 34,
		92, 92, 1, 0, 48, 57, 3, 0, 9, 10, 13, 13, 32, 32, 2, 0, 10, 10, 13, 13,
		4, 0, 10, 10, 13, 13, 34, 34, 92, 92, 3, 0, 34, 34, 123, 123, 125, 125,
		443, 0, 2, 1, 0, 0, 0, 0, 4, 1, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 8, 1, 0,
		0, 0, 0, 10, 1, 0, 0, 0, 0, 12, 1, 0, 0, 0, 0, 14, 1, 0, 0, 0, 0, 16, 1,
		0, 0, 0, 0, 18, 1, 0, 0, 0, 0, 20, 1, 0, 0, 0, 0, 22, 1, 0, 0, 0, 0, 24,
		1, 0, 0, 0, 0, 26, 1, 0, 0, 0, 0, 28, 1, 0, 0, 0, 0, 30, 1, 0, 0, 0, 0,
		32, 1, 0, 0, 0, 0, 34, 1, 0, 0, 0, 0, 36, 1, 0, 0, 0, 0, 38, 1, 0, 0, 0,
		0, 40, 1, 0, 0, 0, 0, 42, 1, 0, 0, 0, 0, 44, 1, 0, 0, 0, 0, 46, 1, 0, 0,
		0, 0, 48, 1, 0, 0, 0, 0, 50, 1, 0, 0, 0, 0, 52, 1, 0, 0, 0, 0, 54, 1, 0,
		0, 0, 0, 56, 1, 0, 0, 0, 0, 58, 1, 0, 0, 0, 0, 60, 1, 0, 0, 0, 0, 62, 1,
		0, 0, 0, 0, 64, 1, 0, 0, 0, 0, 66, 1, 0, 0, 0, 0, 68, 1, 0, 0, 0, 0, 70,
		1, 0, 0, 0, 0, 72, 1, 0, 0, 0, 0, 74, 1, 0, 0, 0, 0, 76, 1, 0, 0, 0, 0,
		78, 1, 0, 0, 0, 0, 80, 1, 0, 0, 0, 0, 82, 1, 0, 0, 0, 0, 84, 1, 0, 0, 0,
		0, 86, 1, 0, 0, 0, 0, 88, 1, 0, 0, 0, 0, 90, 1, 0, 0, 0, 0, 92, 1, 0, 0,
		0, 0, 94, 1, 0, 0, 0, 0, 96, 1, 0, 0, 0, 0, 98, 1, 0, 0, 0, 1, 100, 1,
		0, 0, 0, 1, 102, 1, 0, 0, 0, 1, 104, 1, 0, 0, 0, 1, 108, 1, 0, 0, 0, 2,
		110, 1, 0, 0, 0, 4, 117, 1, 0, 0, 0, 6, 123, 1, 0, 0, 0, 8, 127, 1, 0,
		0, 0, 10, 134, 1, 0, 0, 0, 12, 141, 1, 0, 0, 0, 14, 148, 1, 0, 0, 0, 16,
		153, 1, 0, 0, 0, 18, 158, 1, 0, 0, 0, 20, 164, 1, 0, 0, 0, 22, 171, 1,
		0, 0, 0, 24, 178, 1, 0, 0, 0, 26, 183, 1, 0, 0, 0, 28, 190, 1, 0, 0, 0,
		30, 197, 1, 0, 0, 0, 32, 204, 1, 0, 0, 0, 34, 210, 1, 0, 0, 0, 36, 218,
		1, 0, 0, 0, 38, 227, 1, 0, 0, 0, 40, 230, 1, 0, 0, 0, 42, 235, 1, 0, 0,
		0, 44, 246, 1, 0, 0, 0, 46, 260, 1, 0, 0, 0, 48, 276, 1, 0, 0, 0, 50, 280,
		1, 0, 0, 0, 52, 282, 1, 0, 0, 0, 54, 284, 1, 0, 0, 0, 56, 286, 1, 0, 0,
		0, 58, 288, 1, 0, 0, 0, 60, 290, 1, 0, 0, 0, 62, 292, 1, 0, 0, 0, 64, 294,
		1, 0, 0, 0, 66, 296, 1, 0, 0, 0, 68, 299, 1, 0, 0, 0, 70, 302, 1, 0, 0,
		0, 72, 304, 1, 0, 0, 0, 74, 307, 1, 0, 0, 0, 76, 312, 1, 0, 0, 0, 78, 314,
		1, 0, 0, 0, 80, 316, 1, 0, 0, 0, 82, 323, 1, 0, 0, 0, 84, 335, 1, 0, 0,
		0, 86, 359, 1, 0, 0, 0, 88, 361, 1, 0, 0, 0, 90, 363, 1, 0, 0, 0, 92, 365,
		1, 0, 0, 0, 94, 368, 1, 0, 0, 0, 96, 374, 1, 0, 0, 0, 98, 385, 1, 0, 0,
		0, 100, 399, 1, 0, 0, 0, 102, 404, 1, 0, 0, 0, 104, 409, 1, 0, 0, 0, 106,
		423, 1, 0, 0, 0, 108, 426, 1, 0, 0, 0, 110, 111, 5, 115, 0, 0, 111, 112,
		5, 116, 0, 0, 112, 113, 5, 114, 0, 0, 113, 114, 5, 105, 0, 0, 114, 115,
		5, 110, 0, 0, 115, 116, 5, 103, 0, 0, 116, 3, 1, 0, 0, 0, 117, 118, 5,
		102, 0, 0, 118, 119, 5, 108, 0, 0, 119, 120, 5, 111, 0, 0, 120, 121, 5,
		97, 0, 0, 121, 122, 5, 116, 0, 0, 122, 5, 1, 0, 0, 0, 123, 124, 5, 105,
		0, 0, 124, 125, 5, 110, 0, 0, 125, 126, 5, 116, 0, 0, 126, 7, 1, 0, 0,
		0, 127, 128, 5, 112, 0, 0, 128, 129, 5, 114, 0, 0, 129, 130, 5, 111, 0,
		0, 130, 131, 5, 109, 0, 0, 131, 132, 5, 112, 0, 0, 132, 133, 5, 116, 0,
		0, 133, 9, 1, 0, 0, 0, 134, 135, 5, 112, 0, 0, 135, 136, 5, 97, 0, 0, 136,
		137, 5, 114, 0, 0, 137, 138, 5, 97, 0, 0, 138, 139, 5, 109, 0, 0, 139,
		140, 5, 115, 0, 0, 140, 11, 1, 0, 0, 0, 141, 142, 5, 115, 0, 0, 142, 143,
		5, 121, 0, 0, 143, 144, 5, 115, 0, 0, 144, 145, 5, 116, 0, 0, 145, 146,
		5, 101, 0, 0, 146, 147, 5, 109, 0, 0, 147, 13, 1, 0, 0, 0, 148, 149, 5,
		117, 0, 0, 149, 150, 5, 115, 0, 0, 150, 151, 5, 101, 0, 0, 151, 152, 5,
		114, 0, 0, 152, 15, 1, 0, 0, 0, 153, 154, 5, 110, 0, 0, 154, 155, 5, 111,
		0, 0, 155, 156, 5, 116, 0, 0, 156, 157, 5, 101, 0, 0, 157, 17, 1, 0, 0,
		0, 158, 159, 5, 105, 0, 0, 159, 160, 5, 110, 0, 0, 160, 161, 5, 112, 0,
		0, 161, 162, 5, 117, 0, 0, 162, 163, 5, 116, 0, 0, 163, 19, 1, 0, 0, 0,
		164, 165, 5, 111, 0, 0, 165, 166, 5, 117, 0, 0, 166, 167, 5, 116, 0, 0,
		167, 168, 5, 112, 0, 0, 168, 169, 5, 117, 0, 0, 169, 170, 5, 116, 0, 0,
		170, 21, 1, 0, 0, 0, 171, 172, 5, 102, 0, 0, 172, 173, 5, 111, 0, 0, 173,
		174, 5, 114, 0, 0, 174, 175, 5, 109, 0, 0, 175, 176, 5, 97, 0, 0, 176,
		177, 5, 116, 0, 0, 177, 23, 1, 0, 0, 0, 178, 179, 5, 116, 0, 0, 179, 180,
		5, 121, 0, 0, 180, 181, 5, 112, 0, 0, 181, 182, 5, 101, 0, 0, 182, 25,
		1, 0, 0, 0, 183, 184, 5, 115, 0, 0, 184, 185, 5, 116, 0, 0, 185, 186, 5,
		114, 0, 0, 186, 187, 5, 117, 0, 0, 187, 188, 5, 99, 0, 0, 188, 189, 5,
		116, 0, 0, 189, 27, 1, 0, 0, 0, 190, 191, 5, 98, 0, 0, 191, 192, 5, 101,
		0, 0, 192, 193, 5, 102, 0, 0, 193, 194, 5, 111, 0, 0, 194, 195, 5, 114,
		0, 0, 195, 196, 5, 101, 0, 0, 196, 29, 1, 0, 0, 0, 197, 198, 5, 115, 0,
		0, 198, 199, 5, 99, 0, 0, 199, 200, 5, 104, 0, 0, 200, 201, 5, 101, 0,
		0, 201, 202, 5, 109, 0, 0, 202, 203, 5, 97, 0, 0, 203, 31, 1, 0, 0, 0,
		204, 205, 5, 112, 0, 0, 205, 206, 5, 97, 0, 0, 206, 207, 5, 114, 0, 0,
		207, 208, 5, 115, 0, 0, 208, 209, 5, 101, 0, 0, 209, 33, 1, 0, 0, 0, 210,
		211, 5, 106, 0, 0, 211, 212, 5, 115, 0, 0, 212, 213, 5, 111, 0, 0, 213,
		214, 5, 110, 0, 0, 214, 215, 5, 102, 0, 0, 215, 216, 5, 105, 0, 0, 216,
		217, 5, 120, 0, 0, 217, 35, 1, 0, 0, 0, 218, 219, 5, 109, 0, 0, 219, 220,
		5, 97, 0, 0, 220, 221, 5, 114, 0, 0, 221, 222, 5, 107, 0, 0, 222, 223,
		5, 100, 0, 0, 223, 224, 5, 111, 0, 0, 224, 225, 5, 119, 0, 0, 225, 226,
		5, 110, 0, 0, 226, 37, 1, 0, 0, 0, 227, 228, 5, 105, 0, 0, 228, 229, 5,
		102, 0, 0, 229, 39, 1, 0, 0, 0, 230, 231, 5, 101, 0, 0, 231, 232, 5, 108,
		0, 0, 232, 233, 5, 115, 0, 0, 233, 234, 5, 101, 0, 0, 234, 41, 1, 0, 0,
		0, 235, 236, 5, 111, 0, 0, 236, 237, 5, 117, 0, 0, 237, 238, 5, 116, 0,
		0, 238, 239, 5, 112, 0, 0, 239, 240, 5, 117, 0, 0, 240, 241, 5, 116, 0,
		0, 241, 242, 5, 115, 0, 0, 242, 243, 5, 112, 0, 0, 243, 244, 5, 101, 0,
		0, 244, 245, 5, 99, 0, 0, 245, 43, 1, 0, 0, 0, 246, 247, 5, 102, 0, 0,
		247, 248, 5, 105, 0, 0, 248, 249, 5, 120, 0, 0, 249, 253, 1, 0, 0, 0, 250,
		252, 3, 94, 46, 0, 251, 250, 1, 0, 0, 0, 252, 255, 1, 0, 0, 0, 253, 251,
		1, 0, 0, 0, 253, 254, 1, 0, 0, 0, 254, 256, 1, 0, 0, 0, 255, 253, 1, 0,
		0, 0, 256, 257, 5, 123, 0, 0, 257, 258, 1, 0, 0, 0, 258, 259, 6, 21, 0,
		0, 259, 45, 1, 0, 0, 0, 260, 261, 5, 97, 0, 0, 261, 262, 5, 102, 0, 0,
		262, 263, 5, 116, 0, 0, 263, 264, 5, 101, 0, 0, 264, 265, 5, 114, 0, 0,
		265, 269, 1, 0, 0, 0, 266, 268, 3, 94, 46, 0, 267, 266, 1, 0, 0, 0, 268,
		271, 1, 0, 0, 0, 269, 267, 1, 0, 0, 0, 269, 270, 1, 0, 0, 0, 270, 272,
		1, 0, 0, 0, 271, 269, 1, 0, 0, 0, 272, 273, 5, 123, 0, 0, 273, 274, 1,
		0, 0, 0, 274, 275, 6, 22, 0, 0, 275, 47, 1, 0, 0, 0, 276, 277, 5, 91, 0,
		0, 277, 278, 5, 93, 0, 0, 278, 279, 3, 42, 20, 0, 279, 49, 1, 0, 0, 0,
		280, 281, 5, 123, 0, 0, 281, 51, 1, 0, 0, 0, 282, 283, 5, 125, 0, 0, 283,
		53, 1, 0, 0, 0, 284, 285, 5, 40, 0, 0, 285, 55, 1, 0, 0, 0, 286, 287, 5,
		41, 0, 0, 287, 57, 1, 0, 0, 0, 288, 289, 5, 58, 0, 0, 289, 59, 1, 0, 0,
		0, 290, 291, 5, 61, 0, 0, 291, 61, 1, 0, 0, 0, 292, 293, 5, 44, 0, 0, 293,
		63, 1, 0, 0, 0, 294, 295, 5, 46, 0, 0, 295, 65, 1, 0, 0, 0, 296, 297, 5,
		61, 0, 0, 297, 298, 5, 61, 0, 0, 298, 67, 1, 0, 0, 0, 299, 300, 5, 33,
		0, 0, 300, 301, 5, 61, 0, 0, 301, 69, 1, 0, 0, 0, 302, 303, 5, 64, 0, 0,
		303, 71, 1, 0, 0, 0, 304, 305, 5, 109, 0, 0, 305, 306, 5, 100, 0, 0, 306,
		73, 1, 0, 0, 0, 307, 308, 5, 106, 0, 0, 308, 309, 5, 115, 0, 0, 309, 310,
		5, 111, 0, 0, 310, 311, 5, 110, 0, 0, 311, 75, 1, 0, 0, 0, 312, 313, 5,
		91, 0, 0, 313, 77, 1, 0, 0, 0, 314, 315, 5, 93, 0, 0, 315, 79, 1, 0, 0,
		0, 316, 320, 7, 0, 0, 0, 317, 319, 7, 1, 0, 0, 318, 317, 1, 0, 0, 0, 319,
		322, 1, 0, 0, 0, 320, 318, 1, 0, 0, 0, 320, 321, 1, 0, 0, 0, 321, 81, 1,
		0, 0, 0, 322, 320, 1, 0, 0, 0, 323, 329, 5, 34, 0, 0, 324, 328, 8, 2, 0,
		0, 325, 326, 5, 92, 0, 0, 326, 328, 9, 0, 0, 0, 327, 324, 1, 0, 0, 0, 327,
		325, 1, 0, 0, 0, 328, 331, 1, 0, 0, 0, 329, 327, 1, 0, 0, 0, 329, 330,
		1, 0, 0, 0, 330, 332, 1, 0, 0, 0, 331, 329, 1, 0, 0, 0, 332, 333, 5, 34,
		0, 0, 333, 83, 1, 0, 0, 0, 334, 336, 5, 45, 0, 0, 335, 334, 1, 0, 0, 0,
		335, 336, 1, 0, 0, 0, 336, 338, 1, 0, 0, 0, 337, 339, 7, 3, 0, 0, 338,
		337, 1, 0, 0, 0, 339, 340, 1, 0, 0, 0, 340, 338, 1, 0, 0, 0, 340, 341,
		1, 0, 0, 0, 341, 348, 1, 0, 0, 0, 342, 344, 5, 46, 0, 0, 343, 345, 7, 3,
		0, 0, 344, 343, 1, 0, 0, 0, 345, 346, 1, 0, 0, 0, 346, 344, 1, 0, 0, 0,
		346, 347, 1, 0, 0, 0, 347, 349, 1, 0, 0, 0, 348, 342, 1, 0, 0, 0, 348,
		349, 1, 0, 0, 0, 349, 85, 1, 0, 0, 0, 350, 351, 5, 116, 0, 0, 351, 352,
		5, 114, 0, 0, 352, 353, 5, 117, 0, 0, 353, 360, 5, 101, 0, 0, 354, 355,
		5, 102, 0, 0, 355, 356, 5, 97, 0, 0, 356, 357, 5, 108, 0, 0, 357, 358,
		5, 115, 0, 0, 358, 360, 5, 101, 0, 0, 359, 350, 1, 0, 0, 0, 359, 354, 1,
		0, 0, 0, 360, 87, 1, 0, 0, 0, 361, 362, 5, 124, 0, 0, 362, 89, 1, 0, 0,
		0, 363, 364, 5, 59, 0, 0, 364, 91, 1, 0, 0, 0, 365, 366, 5, 43, 0, 0, 366,
		93, 1, 0, 0, 0, 367, 369, 7, 4, 0, 0, 368, 367, 1, 0, 0, 0, 369, 370, 1,
		0, 0, 0, 370, 368, 1, 0, 0, 0, 370, 371, 1, 0, 0, 0, 371, 372, 1, 0, 0,
		0, 372, 373, 6, 46, 1, 0, 373, 95, 1, 0, 0, 0, 374, 375, 5, 47, 0, 0, 375,
		376, 5, 47, 0, 0, 376, 380, 1, 0, 0, 0, 377, 379, 8, 5, 0, 0, 378, 377,
		1, 0, 0, 0, 379, 382, 1, 0, 0, 0, 380, 378, 1, 0, 0, 0, 380, 381, 1, 0,
		0, 0, 381, 383, 1, 0, 0, 0, 382, 380, 1, 0, 0, 0, 383, 384, 6, 47, 1, 0,
		384, 97, 1, 0, 0, 0, 385, 386, 5, 47, 0, 0, 386, 387, 5, 42, 0, 0, 387,
		391, 1, 0, 0, 0, 388, 390, 9, 0, 0, 0, 389, 388, 1, 0, 0, 0, 390, 393,
		1, 0, 0, 0, 391, 392, 1, 0, 0, 0, 391, 389, 1, 0, 0, 0, 392, 394, 1, 0,
		0, 0, 393, 391, 1, 0, 0, 0, 394, 395, 5, 42, 0, 0, 395, 396, 5, 47, 0,
		0, 396, 397, 1, 0, 0, 0, 397, 398, 6, 48, 1, 0, 398, 99, 1, 0, 0, 0, 399,
		400, 5, 123, 0, 0, 400, 401, 1, 0, 0, 0, 401, 402, 6, 49, 2, 0, 402, 403,
		6, 49, 0, 0, 403, 101, 1, 0, 0, 0, 404, 405, 5, 125, 0, 0, 405, 406, 1,
		0, 0, 0, 406, 407, 6, 50, 3, 0, 407, 408, 6, 50, 4, 0, 408, 103, 1, 0,
		0, 0, 409, 413, 5, 34, 0, 0, 410, 412, 3, 106, 52, 0, 411, 410, 1, 0, 0,
		0, 412, 415, 1, 0, 0, 0, 413, 411, 1, 0, 0, 0, 413, 414, 1, 0, 0, 0, 414,
		416, 1, 0, 0, 0, 415, 413, 1, 0, 0, 0, 416, 417, 5, 34, 0, 0, 417, 105,
		1, 0, 0, 0, 418, 424, 8, 6, 0, 0, 419, 420, 5, 92, 0, 0, 420, 421, 5, 92,
		0, 0, 421, 422, 1, 0, 0, 0, 422, 424, 9, 0, 0, 0, 423, 418, 1, 0, 0, 0,
		423, 419, 1, 0, 0, 0, 424, 107, 1, 0, 0, 0, 425, 427, 8, 7, 0, 0, 426,
		425, 1, 0, 0, 0, 427, 428, 1, 0, 0, 0, 428, 426, 1, 0, 0, 0, 428, 429,
		1, 0, 0, 0, 429, 109, 1, 0, 0, 0, 18, 0, 1, 253, 269, 320, 327, 329, 335,
		340, 346, 348, 359, 370, 380, 391, 413, 423, 428, 5, 5, 1, 0, 0, 1, 0,
		7, 25, 0, 7, 26, 0, 4, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// PromptDSLLexerInit initializes any static state used to implement PromptDSLLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewPromptDSLLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func PromptDSLLexerInit() {
	staticData := &PromptDSLLexerLexerStaticData
	staticData.once.Do(promptdsllexerLexerInit)
}

// NewPromptDSLLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewPromptDSLLexer(input antlr.CharStream) *PromptDSLLexer {
	PromptDSLLexerInit()
	l := new(PromptDSLLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &PromptDSLLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "PromptDSLLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// PromptDSLLexer tokens.
const (
	PromptDSLLexerSTRING_TYPE      = 1
	PromptDSLLexerFLOAT_TYPE       = 2
	PromptDSLLexerINT_TYPE         = 3
	PromptDSLLexerPROMPT           = 4
	PromptDSLLexerPARAMS           = 5
	PromptDSLLexerSYSTEM           = 6
	PromptDSLLexerUSER             = 7
	PromptDSLLexerNOTE             = 8
	PromptDSLLexerINPUT            = 9
	PromptDSLLexerOUTPUT           = 10
	PromptDSLLexerFORMAT           = 11
	PromptDSLLexerTYPE             = 12
	PromptDSLLexerSTRUCT           = 13
	PromptDSLLexerBEFORE           = 14
	PromptDSLLexerSCHEMA           = 15
	PromptDSLLexerPARSE            = 16
	PromptDSLLexerJSONFIX          = 17
	PromptDSLLexerMARKDOWN         = 18
	PromptDSLLexerIF               = 19
	PromptDSLLexerELSE             = 20
	PromptDSLLexerOUTPUTSPEC       = 21
	PromptDSLLexerFIX              = 22
	PromptDSLLexerAFTER            = 23
	PromptDSLLexerARRAY_OUTPUTSPEC = 24
	PromptDSLLexerLBRACE           = 25
	PromptDSLLexerRBRACE           = 26
	PromptDSLLexerLPAREN           = 27
	PromptDSLLexerRPAREN           = 28
	PromptDSLLexerCOLON            = 29
	PromptDSLLexerEQUAL            = 30
	PromptDSLLexerCOMMA            = 31
	PromptDSLLexerDOT              = 32
	PromptDSLLexerEQEQ             = 33
	PromptDSLLexerNOTEQ            = 34
	PromptDSLLexerAT               = 35
	PromptDSLLexerMD               = 36
	PromptDSLLexerJSON             = 37
	PromptDSLLexerLBRACK           = 38
	PromptDSLLexerRBRACK           = 39
	PromptDSLLexerID               = 40
	PromptDSLLexerSTRING           = 41
	PromptDSLLexerNUMBER           = 42
	PromptDSLLexerBOOL             = 43
	PromptDSLLexerPIPE             = 44
	PromptDSLLexerSEMI             = 45
	PromptDSLLexerPLUS             = 46
	PromptDSLLexerWS               = 47
	PromptDSLLexerLINE_COMMENT     = 48
	PromptDSLLexerBLOCK_COMMENT    = 49
	PromptDSLLexerCODE_STRING      = 50
	PromptDSLLexerCODE_TEXT        = 51
)

// PromptDSLLexerCODE_BLOCK is the PromptDSLLexer mode.
const PromptDSLLexerCODE_BLOCK = 1
