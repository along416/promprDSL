prompt SplitSolutionSteps {
    input {
            question: string
            process: string
    }
    @latex("其中所有数学公式必须使用 LaTeX 格式")
    @kl("并用单个美元符号'$...$'包裹")
    output {

            Conditions: []string @jsonname("条件")  @latex @kl
            KnowledgePoint: string @jsonname("知识点")  @latex @kl
            ProcessResult: string @jsonname("过程")  @latex @kl 
	}


    system {
       sys_role
       sys_expertise      
    }

    sys_role{
        "你是一个擅长拆分解题步骤的数学老师,"
    }
    sys_expertise {
        "当前任务是将解题步骤进行合理拆分"
    }

    user {
        if (input.question != ""){
            "你好"
        }
        else{
            "siuehfebn"
            "siuehfebn"
            "siuehfebn"
        }
        "请根据以下输入题目及其解答内容，将完整的解答过程拆分为多个“短链”，每个“短链”包含以下三个要素："
        "题目："
        input.question
        "过程："
        input.process
        "条件，知识点，结果"
        "请将输出内容严格按照以下格式返回："
        []outputspec
        "特别提醒：本题可能涉及 extra_hint，请根据步骤合理提取对应知识点。"
    }

    <fix>
        var output []OutputContext

        // 解析 JSON 字符串
        err := json.Unmarshal([]byte(response), &output)
        if err != nil {

            return nil,err
        }

        for i := range output {
            // 如果知识点为空，填入默认值
            if strings.TrimSpace(output[i].KnowledgePoint) == "" {
                output[i].KnowledgePoint = "默认知识点"
            }

            // 清理条件中的空格
            for j, cond := range output[i].Conditions {
                output[i].Conditions[j] = strings.TrimSpace(cond)
            }

            // 示例逻辑：根据知识点长度进行一些微调检查
            delta := math.Abs(float64(len(output[i].KnowledgePoint)) - 5.0)
            if delta > 10 {
            }
        }

        return output,err
    </fix>

    <after>
        trueCount := 0
        for _, item := range output {
            if item.ProcessResult!= "" {
                trueCount++
            }
        }
        return output
    </after>
}
