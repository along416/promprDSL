// Code generated from PromptDSL.g4 by ANTLR 4.13.2. DO NOT EDIT.

package promptdsl

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type PromptDSLLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var PromptDSLLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func promptdsllexerLexerInit() {
	staticData := &PromptDSLLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'{'", "'}'", "':'", "'['", "']'", "'='", "'@'", "'('", "')'", "','",
		"'classification'", "'summarization'", "'compilation'", "'extra_hint'",
		"'-'", "'string'", "'float'", "'int'", "'md'", "'json'", "'prompt'",
		"'params'", "'system'", "'user'", "'note'", "'in'", "'output'", "'format'",
		"'type'", "'struct'", "'schema'", "", "", "", "", "'|'", "';'",
	}
	staticData.SymbolicNames = []string{
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
		"", "", "", "", "PROMPT", "PARAMS", "SYSTEM", "USER", "NOTE", "IN",
		"OUTPUT", "FORMAT", "TYPE", "STRUCT", "SCHEMA", "ID", "STRING", "NUMBER",
		"BOOL", "PIPE", "SEMI", "WS", "LINE_COMMENT", "BLOCK_COMMENT",
	}
	staticData.RuleNames = []string{
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16",
		"T__17", "T__18", "T__19", "PROMPT", "PARAMS", "SYSTEM", "USER", "NOTE",
		"IN", "OUTPUT", "FORMAT", "TYPE", "STRUCT", "SCHEMA", "ID", "STRING",
		"NUMBER", "BOOL", "PIPE", "SEMI", "WS", "LINE_COMMENT", "BLOCK_COMMENT",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 40, 328, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 1, 0, 1, 0, 1, 1, 1, 1,
		1, 2, 1, 2, 1, 3, 1, 3, 1, 4, 1, 4, 1, 5, 1, 5, 1, 6, 1, 6, 1, 7, 1, 7,
		1, 8, 1, 8, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10,
		1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1,
		11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11,
		1, 11, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1,
		12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13,
		1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1,
		15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17,
		1, 17, 1, 18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 20, 1,
		20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21,
		1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 23, 1,
		23, 1, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 25, 1, 25,
		1, 25, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 27, 1, 27, 1,
		27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 29,
		1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 30, 1, 30, 1, 30, 1, 30, 1,
		30, 1, 30, 1, 30, 1, 31, 1, 31, 5, 31, 250, 8, 31, 10, 31, 12, 31, 253,
		9, 31, 1, 32, 1, 32, 1, 32, 1, 32, 5, 32, 259, 8, 32, 10, 32, 12, 32, 262,
		9, 32, 1, 32, 1, 32, 1, 33, 3, 33, 267, 8, 33, 1, 33, 4, 33, 270, 8, 33,
		11, 33, 12, 33, 271, 1, 33, 1, 33, 4, 33, 276, 8, 33, 11, 33, 12, 33, 277,
		3, 33, 280, 8, 33, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1,
		34, 1, 34, 3, 34, 291, 8, 34, 1, 35, 1, 35, 1, 36, 1, 36, 1, 37, 4, 37,
		298, 8, 37, 11, 37, 12, 37, 299, 1, 37, 1, 37, 1, 38, 1, 38, 1, 38, 1,
		38, 5, 38, 308, 8, 38, 10, 38, 12, 38, 311, 9, 38, 1, 38, 1, 38, 1, 39,
		1, 39, 1, 39, 1, 39, 5, 39, 319, 8, 39, 10, 39, 12, 39, 322, 9, 39, 1,
		39, 1, 39, 1, 39, 1, 39, 1, 39, 1, 320, 0, 40, 1, 1, 3, 2, 5, 3, 7, 4,
		9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14,
		29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23,
		47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32,
		65, 33, 67, 34, 69, 35, 71, 36, 73, 37, 75, 38, 77, 39, 79, 40, 1, 0, 6,
		3, 0, 65, 90, 95, 95, 97, 122, 4, 0, 48, 57, 65, 90, 95, 95, 97, 122, 2,
		0, 34, 34, 92, 92, 1, 0, 48, 57, 3, 0, 9, 10, 13, 13, 32, 32, 2, 0, 10,
		10, 13, 13, 338, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0,
		0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0,
		0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0,
		0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1,
		0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37,
		1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0,
		45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0,
		0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0,
		0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0,
		0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1,
		0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 1, 81, 1, 0, 0, 0, 3, 83,
		1, 0, 0, 0, 5, 85, 1, 0, 0, 0, 7, 87, 1, 0, 0, 0, 9, 89, 1, 0, 0, 0, 11,
		91, 1, 0, 0, 0, 13, 93, 1, 0, 0, 0, 15, 95, 1, 0, 0, 0, 17, 97, 1, 0, 0,
		0, 19, 99, 1, 0, 0, 0, 21, 101, 1, 0, 0, 0, 23, 116, 1, 0, 0, 0, 25, 130,
		1, 0, 0, 0, 27, 142, 1, 0, 0, 0, 29, 153, 1, 0, 0, 0, 31, 155, 1, 0, 0,
		0, 33, 162, 1, 0, 0, 0, 35, 168, 1, 0, 0, 0, 37, 172, 1, 0, 0, 0, 39, 175,
		1, 0, 0, 0, 41, 180, 1, 0, 0, 0, 43, 187, 1, 0, 0, 0, 45, 194, 1, 0, 0,
		0, 47, 201, 1, 0, 0, 0, 49, 206, 1, 0, 0, 0, 51, 211, 1, 0, 0, 0, 53, 214,
		1, 0, 0, 0, 55, 221, 1, 0, 0, 0, 57, 228, 1, 0, 0, 0, 59, 233, 1, 0, 0,
		0, 61, 240, 1, 0, 0, 0, 63, 247, 1, 0, 0, 0, 65, 254, 1, 0, 0, 0, 67, 266,
		1, 0, 0, 0, 69, 290, 1, 0, 0, 0, 71, 292, 1, 0, 0, 0, 73, 294, 1, 0, 0,
		0, 75, 297, 1, 0, 0, 0, 77, 303, 1, 0, 0, 0, 79, 314, 1, 0, 0, 0, 81, 82,
		5, 123, 0, 0, 82, 2, 1, 0, 0, 0, 83, 84, 5, 125, 0, 0, 84, 4, 1, 0, 0,
		0, 85, 86, 5, 58, 0, 0, 86, 6, 1, 0, 0, 0, 87, 88, 5, 91, 0, 0, 88, 8,
		1, 0, 0, 0, 89, 90, 5, 93, 0, 0, 90, 10, 1, 0, 0, 0, 91, 92, 5, 61, 0,
		0, 92, 12, 1, 0, 0, 0, 93, 94, 5, 64, 0, 0, 94, 14, 1, 0, 0, 0, 95, 96,
		5, 40, 0, 0, 96, 16, 1, 0, 0, 0, 97, 98, 5, 41, 0, 0, 98, 18, 1, 0, 0,
		0, 99, 100, 5, 44, 0, 0, 100, 20, 1, 0, 0, 0, 101, 102, 5, 99, 0, 0, 102,
		103, 5, 108, 0, 0, 103, 104, 5, 97, 0, 0, 104, 105, 5, 115, 0, 0, 105,
		106, 5, 115, 0, 0, 106, 107, 5, 105, 0, 0, 107, 108, 5, 102, 0, 0, 108,
		109, 5, 105, 0, 0, 109, 110, 5, 99, 0, 0, 110, 111, 5, 97, 0, 0, 111, 112,
		5, 116, 0, 0, 112, 113, 5, 105, 0, 0, 113, 114, 5, 111, 0, 0, 114, 115,
		5, 110, 0, 0, 115, 22, 1, 0, 0, 0, 116, 117, 5, 115, 0, 0, 117, 118, 5,
		117, 0, 0, 118, 119, 5, 109, 0, 0, 119, 120, 5, 109, 0, 0, 120, 121, 5,
		97, 0, 0, 121, 122, 5, 114, 0, 0, 122, 123, 5, 105, 0, 0, 123, 124, 5,
		122, 0, 0, 124, 125, 5, 97, 0, 0, 125, 126, 5, 116, 0, 0, 126, 127, 5,
		105, 0, 0, 127, 128, 5, 111, 0, 0, 128, 129, 5, 110, 0, 0, 129, 24, 1,
		0, 0, 0, 130, 131, 5, 99, 0, 0, 131, 132, 5, 111, 0, 0, 132, 133, 5, 109,
		0, 0, 133, 134, 5, 112, 0, 0, 134, 135, 5, 105, 0, 0, 135, 136, 5, 108,
		0, 0, 136, 137, 5, 97, 0, 0, 137, 138, 5, 116, 0, 0, 138, 139, 5, 105,
		0, 0, 139, 140, 5, 111, 0, 0, 140, 141, 5, 110, 0, 0, 141, 26, 1, 0, 0,
		0, 142, 143, 5, 101, 0, 0, 143, 144, 5, 120, 0, 0, 144, 145, 5, 116, 0,
		0, 145, 146, 5, 114, 0, 0, 146, 147, 5, 97, 0, 0, 147, 148, 5, 95, 0, 0,
		148, 149, 5, 104, 0, 0, 149, 150, 5, 105, 0, 0, 150, 151, 5, 110, 0, 0,
		151, 152, 5, 116, 0, 0, 152, 28, 1, 0, 0, 0, 153, 154, 5, 45, 0, 0, 154,
		30, 1, 0, 0, 0, 155, 156, 5, 115, 0, 0, 156, 157, 5, 116, 0, 0, 157, 158,
		5, 114, 0, 0, 158, 159, 5, 105, 0, 0, 159, 160, 5, 110, 0, 0, 160, 161,
		5, 103, 0, 0, 161, 32, 1, 0, 0, 0, 162, 163, 5, 102, 0, 0, 163, 164, 5,
		108, 0, 0, 164, 165, 5, 111, 0, 0, 165, 166, 5, 97, 0, 0, 166, 167, 5,
		116, 0, 0, 167, 34, 1, 0, 0, 0, 168, 169, 5, 105, 0, 0, 169, 170, 5, 110,
		0, 0, 170, 171, 5, 116, 0, 0, 171, 36, 1, 0, 0, 0, 172, 173, 5, 109, 0,
		0, 173, 174, 5, 100, 0, 0, 174, 38, 1, 0, 0, 0, 175, 176, 5, 106, 0, 0,
		176, 177, 5, 115, 0, 0, 177, 178, 5, 111, 0, 0, 178, 179, 5, 110, 0, 0,
		179, 40, 1, 0, 0, 0, 180, 181, 5, 112, 0, 0, 181, 182, 5, 114, 0, 0, 182,
		183, 5, 111, 0, 0, 183, 184, 5, 109, 0, 0, 184, 185, 5, 112, 0, 0, 185,
		186, 5, 116, 0, 0, 186, 42, 1, 0, 0, 0, 187, 188, 5, 112, 0, 0, 188, 189,
		5, 97, 0, 0, 189, 190, 5, 114, 0, 0, 190, 191, 5, 97, 0, 0, 191, 192, 5,
		109, 0, 0, 192, 193, 5, 115, 0, 0, 193, 44, 1, 0, 0, 0, 194, 195, 5, 115,
		0, 0, 195, 196, 5, 121, 0, 0, 196, 197, 5, 115, 0, 0, 197, 198, 5, 116,
		0, 0, 198, 199, 5, 101, 0, 0, 199, 200, 5, 109, 0, 0, 200, 46, 1, 0, 0,
		0, 201, 202, 5, 117, 0, 0, 202, 203, 5, 115, 0, 0, 203, 204, 5, 101, 0,
		0, 204, 205, 5, 114, 0, 0, 205, 48, 1, 0, 0, 0, 206, 207, 5, 110, 0, 0,
		207, 208, 5, 111, 0, 0, 208, 209, 5, 116, 0, 0, 209, 210, 5, 101, 0, 0,
		210, 50, 1, 0, 0, 0, 211, 212, 5, 105, 0, 0, 212, 213, 5, 110, 0, 0, 213,
		52, 1, 0, 0, 0, 214, 215, 5, 111, 0, 0, 215, 216, 5, 117, 0, 0, 216, 217,
		5, 116, 0, 0, 217, 218, 5, 112, 0, 0, 218, 219, 5, 117, 0, 0, 219, 220,
		5, 116, 0, 0, 220, 54, 1, 0, 0, 0, 221, 222, 5, 102, 0, 0, 222, 223, 5,
		111, 0, 0, 223, 224, 5, 114, 0, 0, 224, 225, 5, 109, 0, 0, 225, 226, 5,
		97, 0, 0, 226, 227, 5, 116, 0, 0, 227, 56, 1, 0, 0, 0, 228, 229, 5, 116,
		0, 0, 229, 230, 5, 121, 0, 0, 230, 231, 5, 112, 0, 0, 231, 232, 5, 101,
		0, 0, 232, 58, 1, 0, 0, 0, 233, 234, 5, 115, 0, 0, 234, 235, 5, 116, 0,
		0, 235, 236, 5, 114, 0, 0, 236, 237, 5, 117, 0, 0, 237, 238, 5, 99, 0,
		0, 238, 239, 5, 116, 0, 0, 239, 60, 1, 0, 0, 0, 240, 241, 5, 115, 0, 0,
		241, 242, 5, 99, 0, 0, 242, 243, 5, 104, 0, 0, 243, 244, 5, 101, 0, 0,
		244, 245, 5, 109, 0, 0, 245, 246, 5, 97, 0, 0, 246, 62, 1, 0, 0, 0, 247,
		251, 7, 0, 0, 0, 248, 250, 7, 1, 0, 0, 249, 248, 1, 0, 0, 0, 250, 253,
		1, 0, 0, 0, 251, 249, 1, 0, 0, 0, 251, 252, 1, 0, 0, 0, 252, 64, 1, 0,
		0, 0, 253, 251, 1, 0, 0, 0, 254, 260, 5, 34, 0, 0, 255, 259, 8, 2, 0, 0,
		256, 257, 5, 92, 0, 0, 257, 259, 9, 0, 0, 0, 258, 255, 1, 0, 0, 0, 258,
		256, 1, 0, 0, 0, 259, 262, 1, 0, 0, 0, 260, 258, 1, 0, 0, 0, 260, 261,
		1, 0, 0, 0, 261, 263, 1, 0, 0, 0, 262, 260, 1, 0, 0, 0, 263, 264, 5, 34,
		0, 0, 264, 66, 1, 0, 0, 0, 265, 267, 5, 45, 0, 0, 266, 265, 1, 0, 0, 0,
		266, 267, 1, 0, 0, 0, 267, 269, 1, 0, 0, 0, 268, 270, 7, 3, 0, 0, 269,
		268, 1, 0, 0, 0, 270, 271, 1, 0, 0, 0, 271, 269, 1, 0, 0, 0, 271, 272,
		1, 0, 0, 0, 272, 279, 1, 0, 0, 0, 273, 275, 5, 46, 0, 0, 274, 276, 7, 3,
		0, 0, 275, 274, 1, 0, 0, 0, 276, 277, 1, 0, 0, 0, 277, 275, 1, 0, 0, 0,
		277, 278, 1, 0, 0, 0, 278, 280, 1, 0, 0, 0, 279, 273, 1, 0, 0, 0, 279,
		280, 1, 0, 0, 0, 280, 68, 1, 0, 0, 0, 281, 282, 5, 116, 0, 0, 282, 283,
		5, 114, 0, 0, 283, 284, 5, 117, 0, 0, 284, 291, 5, 101, 0, 0, 285, 286,
		5, 102, 0, 0, 286, 287, 5, 97, 0, 0, 287, 288, 5, 108, 0, 0, 288, 289,
		5, 115, 0, 0, 289, 291, 5, 101, 0, 0, 290, 281, 1, 0, 0, 0, 290, 285, 1,
		0, 0, 0, 291, 70, 1, 0, 0, 0, 292, 293, 5, 124, 0, 0, 293, 72, 1, 0, 0,
		0, 294, 295, 5, 59, 0, 0, 295, 74, 1, 0, 0, 0, 296, 298, 7, 4, 0, 0, 297,
		296, 1, 0, 0, 0, 298, 299, 1, 0, 0, 0, 299, 297, 1, 0, 0, 0, 299, 300,
		1, 0, 0, 0, 300, 301, 1, 0, 0, 0, 301, 302, 6, 37, 0, 0, 302, 76, 1, 0,
		0, 0, 303, 304, 5, 47, 0, 0, 304, 305, 5, 47, 0, 0, 305, 309, 1, 0, 0,
		0, 306, 308, 8, 5, 0, 0, 307, 306, 1, 0, 0, 0, 308, 311, 1, 0, 0, 0, 309,
		307, 1, 0, 0, 0, 309, 310, 1, 0, 0, 0, 310, 312, 1, 0, 0, 0, 311, 309,
		1, 0, 0, 0, 312, 313, 6, 38, 0, 0, 313, 78, 1, 0, 0, 0, 314, 315, 5, 47,
		0, 0, 315, 316, 5, 42, 0, 0, 316, 320, 1, 0, 0, 0, 317, 319, 9, 0, 0, 0,
		318, 317, 1, 0, 0, 0, 319, 322, 1, 0, 0, 0, 320, 321, 1, 0, 0, 0, 320,
		318, 1, 0, 0, 0, 321, 323, 1, 0, 0, 0, 322, 320, 1, 0, 0, 0, 323, 324,
		5, 42, 0, 0, 324, 325, 5, 47, 0, 0, 325, 326, 1, 0, 0, 0, 326, 327, 6,
		39, 0, 0, 327, 80, 1, 0, 0, 0, 12, 0, 251, 258, 260, 266, 271, 277, 279,
		290, 299, 309, 320, 1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// PromptDSLLexerInit initializes any static state used to implement PromptDSLLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewPromptDSLLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func PromptDSLLexerInit() {
	staticData := &PromptDSLLexerLexerStaticData
	staticData.once.Do(promptdsllexerLexerInit)
}

// NewPromptDSLLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewPromptDSLLexer(input antlr.CharStream) *PromptDSLLexer {
	PromptDSLLexerInit()
	l := new(PromptDSLLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &PromptDSLLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "PromptDSL.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// PromptDSLLexer tokens.
const (
	PromptDSLLexerT__0          = 1
	PromptDSLLexerT__1          = 2
	PromptDSLLexerT__2          = 3
	PromptDSLLexerT__3          = 4
	PromptDSLLexerT__4          = 5
	PromptDSLLexerT__5          = 6
	PromptDSLLexerT__6          = 7
	PromptDSLLexerT__7          = 8
	PromptDSLLexerT__8          = 9
	PromptDSLLexerT__9          = 10
	PromptDSLLexerT__10         = 11
	PromptDSLLexerT__11         = 12
	PromptDSLLexerT__12         = 13
	PromptDSLLexerT__13         = 14
	PromptDSLLexerT__14         = 15
	PromptDSLLexerT__15         = 16
	PromptDSLLexerT__16         = 17
	PromptDSLLexerT__17         = 18
	PromptDSLLexerT__18         = 19
	PromptDSLLexerT__19         = 20
	PromptDSLLexerPROMPT        = 21
	PromptDSLLexerPARAMS        = 22
	PromptDSLLexerSYSTEM        = 23
	PromptDSLLexerUSER          = 24
	PromptDSLLexerNOTE          = 25
	PromptDSLLexerIN            = 26
	PromptDSLLexerOUTPUT        = 27
	PromptDSLLexerFORMAT        = 28
	PromptDSLLexerTYPE          = 29
	PromptDSLLexerSTRUCT        = 30
	PromptDSLLexerSCHEMA        = 31
	PromptDSLLexerID            = 32
	PromptDSLLexerSTRING        = 33
	PromptDSLLexerNUMBER        = 34
	PromptDSLLexerBOOL          = 35
	PromptDSLLexerPIPE          = 36
	PromptDSLLexerSEMI          = 37
	PromptDSLLexerWS            = 38
	PromptDSLLexerLINE_COMMENT  = 39
	PromptDSLLexerBLOCK_COMMENT = 40
)
