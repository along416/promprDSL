// Code generated from PromptDSL.g4 by ANTLR 4.13.2. DO NOT EDIT.

package promptdsl

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type PromptDSLLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var PromptDSLLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func promptdsllexerLexerInit() {
	staticData := &PromptDSLLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'{'", "'}'", "':'", "'('", "','", "')'", "'='", "'.'", "'@'", "'['",
		"']'", "'-'", "'[]'", "'md'", "'json'", "'+'", "", "'string'", "'float'",
		"'int'", "'prompt'", "'params'", "'system'", "'user'", "'note'", "'input'",
		"'output'", "'format'", "'type'", "'struct'", "'before'", "'schema'",
		"'after'", "'parse'", "'jsonfix'", "", "", "", "", "'|'", "';'",
	}
	staticData.SymbolicNames = []string{
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "PLUS",
		"JAVASCRIPT_BLOCK", "STRING_TYPE", "FLOAT_TYPE", "INT_TYPE", "PROMPT",
		"PARAMS", "SYSTEM", "USER", "NOTE", "INPUT", "OUTPUT", "FORMAT", "TYPE",
		"STRUCT", "BEFORE", "SCHEMA", "AFTER", "PARSE", "JSONFIX", "ID", "STRING",
		"NUMBER", "BOOL", "PIPE", "SEMI", "WS", "LINE_COMMENT", "BLOCK_COMMENT",
	}
	staticData.RuleNames = []string{
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "PLUS", "JAVASCRIPT_BLOCK",
		"STRING_TYPE", "FLOAT_TYPE", "INT_TYPE", "PROMPT", "PARAMS", "SYSTEM",
		"USER", "NOTE", "INPUT", "OUTPUT", "FORMAT", "TYPE", "STRUCT", "BEFORE",
		"SCHEMA", "AFTER", "PARSE", "JSONFIX", "ID", "STRING", "NUMBER", "BOOL",
		"PIPE", "SEMI", "WS", "LINE_COMMENT", "BLOCK_COMMENT",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 44, 331, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2, 1, 2, 1,
		3, 1, 3, 1, 4, 1, 4, 1, 5, 1, 5, 1, 6, 1, 6, 1, 7, 1, 7, 1, 8, 1, 8, 1,
		9, 1, 9, 1, 10, 1, 10, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13,
		1, 13, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 16, 1, 16, 1,
		16, 5, 16, 130, 8, 16, 10, 16, 12, 16, 133, 9, 16, 1, 16, 1, 16, 1, 17,
		1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 18, 1, 18, 1,
		18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20,
		1, 20, 1, 20, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 22, 1,
		22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23,
		1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 25, 1, 25, 1, 25, 1, 25, 1, 25, 1,
		25, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 27, 1, 27, 1, 27,
		1, 27, 1, 27, 1, 27, 1, 27, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 29, 1,
		29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 30, 1, 30, 1, 30, 1, 30, 1, 30,
		1, 30, 1, 30, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 32, 1,
		32, 1, 32, 1, 32, 1, 32, 1, 32, 1, 33, 1, 33, 1, 33, 1, 33, 1, 33, 1, 33,
		1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 35, 1, 35, 5,
		35, 253, 8, 35, 10, 35, 12, 35, 256, 9, 35, 1, 36, 1, 36, 1, 36, 1, 36,
		5, 36, 262, 8, 36, 10, 36, 12, 36, 265, 9, 36, 1, 36, 1, 36, 1, 37, 3,
		37, 270, 8, 37, 1, 37, 4, 37, 273, 8, 37, 11, 37, 12, 37, 274, 1, 37, 1,
		37, 4, 37, 279, 8, 37, 11, 37, 12, 37, 280, 3, 37, 283, 8, 37, 1, 38, 1,
		38, 1, 38, 1, 38, 1, 38, 1, 38, 1, 38, 1, 38, 1, 38, 3, 38, 294, 8, 38,
		1, 39, 1, 39, 1, 40, 1, 40, 1, 41, 4, 41, 301, 8, 41, 11, 41, 12, 41, 302,
		1, 41, 1, 41, 1, 42, 1, 42, 1, 42, 1, 42, 5, 42, 311, 8, 42, 10, 42, 12,
		42, 314, 9, 42, 1, 42, 1, 42, 1, 43, 1, 43, 1, 43, 1, 43, 5, 43, 322, 8,
		43, 10, 43, 12, 43, 325, 9, 43, 1, 43, 1, 43, 1, 43, 1, 43, 1, 43, 1, 323,
		0, 44, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10,
		21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19,
		39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 27, 55, 28,
		57, 29, 59, 30, 61, 31, 63, 32, 65, 33, 67, 34, 69, 35, 71, 36, 73, 37,
		75, 38, 77, 39, 79, 40, 81, 41, 83, 42, 85, 43, 87, 44, 1, 0, 7, 1, 0,
		96, 96, 2, 0, 10, 10, 13, 13, 3, 0, 65, 90, 95, 95, 97, 122, 4, 0, 48,
		57, 65, 90, 95, 95, 97, 122, 2, 0, 34, 34, 92, 92, 1, 0, 48, 57, 3, 0,
		9, 10, 13, 13, 32, 32, 343, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1,
		0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13,
		1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0,
		21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0,
		0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0,
		0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0,
		0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1,
		0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59,
		1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0,
		67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0,
		0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 81, 1, 0, 0,
		0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0, 0, 87, 1, 0, 0, 0, 1, 89, 1, 0,
		0, 0, 3, 91, 1, 0, 0, 0, 5, 93, 1, 0, 0, 0, 7, 95, 1, 0, 0, 0, 9, 97, 1,
		0, 0, 0, 11, 99, 1, 0, 0, 0, 13, 101, 1, 0, 0, 0, 15, 103, 1, 0, 0, 0,
		17, 105, 1, 0, 0, 0, 19, 107, 1, 0, 0, 0, 21, 109, 1, 0, 0, 0, 23, 111,
		1, 0, 0, 0, 25, 113, 1, 0, 0, 0, 27, 116, 1, 0, 0, 0, 29, 119, 1, 0, 0,
		0, 31, 124, 1, 0, 0, 0, 33, 126, 1, 0, 0, 0, 35, 136, 1, 0, 0, 0, 37, 143,
		1, 0, 0, 0, 39, 149, 1, 0, 0, 0, 41, 153, 1, 0, 0, 0, 43, 160, 1, 0, 0,
		0, 45, 167, 1, 0, 0, 0, 47, 174, 1, 0, 0, 0, 49, 179, 1, 0, 0, 0, 51, 184,
		1, 0, 0, 0, 53, 190, 1, 0, 0, 0, 55, 197, 1, 0, 0, 0, 57, 204, 1, 0, 0,
		0, 59, 209, 1, 0, 0, 0, 61, 216, 1, 0, 0, 0, 63, 223, 1, 0, 0, 0, 65, 230,
		1, 0, 0, 0, 67, 236, 1, 0, 0, 0, 69, 242, 1, 0, 0, 0, 71, 250, 1, 0, 0,
		0, 73, 257, 1, 0, 0, 0, 75, 269, 1, 0, 0, 0, 77, 293, 1, 0, 0, 0, 79, 295,
		1, 0, 0, 0, 81, 297, 1, 0, 0, 0, 83, 300, 1, 0, 0, 0, 85, 306, 1, 0, 0,
		0, 87, 317, 1, 0, 0, 0, 89, 90, 5, 123, 0, 0, 90, 2, 1, 0, 0, 0, 91, 92,
		5, 125, 0, 0, 92, 4, 1, 0, 0, 0, 93, 94, 5, 58, 0, 0, 94, 6, 1, 0, 0, 0,
		95, 96, 5, 40, 0, 0, 96, 8, 1, 0, 0, 0, 97, 98, 5, 44, 0, 0, 98, 10, 1,
		0, 0, 0, 99, 100, 5, 41, 0, 0, 100, 12, 1, 0, 0, 0, 101, 102, 5, 61, 0,
		0, 102, 14, 1, 0, 0, 0, 103, 104, 5, 46, 0, 0, 104, 16, 1, 0, 0, 0, 105,
		106, 5, 64, 0, 0, 106, 18, 1, 0, 0, 0, 107, 108, 5, 91, 0, 0, 108, 20,
		1, 0, 0, 0, 109, 110, 5, 93, 0, 0, 110, 22, 1, 0, 0, 0, 111, 112, 5, 45,
		0, 0, 112, 24, 1, 0, 0, 0, 113, 114, 5, 91, 0, 0, 114, 115, 5, 93, 0, 0,
		115, 26, 1, 0, 0, 0, 116, 117, 5, 109, 0, 0, 117, 118, 5, 100, 0, 0, 118,
		28, 1, 0, 0, 0, 119, 120, 5, 106, 0, 0, 120, 121, 5, 115, 0, 0, 121, 122,
		5, 111, 0, 0, 122, 123, 5, 110, 0, 0, 123, 30, 1, 0, 0, 0, 124, 125, 5,
		43, 0, 0, 125, 32, 1, 0, 0, 0, 126, 131, 5, 96, 0, 0, 127, 130, 8, 0, 0,
		0, 128, 130, 7, 1, 0, 0, 129, 127, 1, 0, 0, 0, 129, 128, 1, 0, 0, 0, 130,
		133, 1, 0, 0, 0, 131, 129, 1, 0, 0, 0, 131, 132, 1, 0, 0, 0, 132, 134,
		1, 0, 0, 0, 133, 131, 1, 0, 0, 0, 134, 135, 5, 96, 0, 0, 135, 34, 1, 0,
		0, 0, 136, 137, 5, 115, 0, 0, 137, 138, 5, 116, 0, 0, 138, 139, 5, 114,
		0, 0, 139, 140, 5, 105, 0, 0, 140, 141, 5, 110, 0, 0, 141, 142, 5, 103,
		0, 0, 142, 36, 1, 0, 0, 0, 143, 144, 5, 102, 0, 0, 144, 145, 5, 108, 0,
		0, 145, 146, 5, 111, 0, 0, 146, 147, 5, 97, 0, 0, 147, 148, 5, 116, 0,
		0, 148, 38, 1, 0, 0, 0, 149, 150, 5, 105, 0, 0, 150, 151, 5, 110, 0, 0,
		151, 152, 5, 116, 0, 0, 152, 40, 1, 0, 0, 0, 153, 154, 5, 112, 0, 0, 154,
		155, 5, 114, 0, 0, 155, 156, 5, 111, 0, 0, 156, 157, 5, 109, 0, 0, 157,
		158, 5, 112, 0, 0, 158, 159, 5, 116, 0, 0, 159, 42, 1, 0, 0, 0, 160, 161,
		5, 112, 0, 0, 161, 162, 5, 97, 0, 0, 162, 163, 5, 114, 0, 0, 163, 164,
		5, 97, 0, 0, 164, 165, 5, 109, 0, 0, 165, 166, 5, 115, 0, 0, 166, 44, 1,
		0, 0, 0, 167, 168, 5, 115, 0, 0, 168, 169, 5, 121, 0, 0, 169, 170, 5, 115,
		0, 0, 170, 171, 5, 116, 0, 0, 171, 172, 5, 101, 0, 0, 172, 173, 5, 109,
		0, 0, 173, 46, 1, 0, 0, 0, 174, 175, 5, 117, 0, 0, 175, 176, 5, 115, 0,
		0, 176, 177, 5, 101, 0, 0, 177, 178, 5, 114, 0, 0, 178, 48, 1, 0, 0, 0,
		179, 180, 5, 110, 0, 0, 180, 181, 5, 111, 0, 0, 181, 182, 5, 116, 0, 0,
		182, 183, 5, 101, 0, 0, 183, 50, 1, 0, 0, 0, 184, 185, 5, 105, 0, 0, 185,
		186, 5, 110, 0, 0, 186, 187, 5, 112, 0, 0, 187, 188, 5, 117, 0, 0, 188,
		189, 5, 116, 0, 0, 189, 52, 1, 0, 0, 0, 190, 191, 5, 111, 0, 0, 191, 192,
		5, 117, 0, 0, 192, 193, 5, 116, 0, 0, 193, 194, 5, 112, 0, 0, 194, 195,
		5, 117, 0, 0, 195, 196, 5, 116, 0, 0, 196, 54, 1, 0, 0, 0, 197, 198, 5,
		102, 0, 0, 198, 199, 5, 111, 0, 0, 199, 200, 5, 114, 0, 0, 200, 201, 5,
		109, 0, 0, 201, 202, 5, 97, 0, 0, 202, 203, 5, 116, 0, 0, 203, 56, 1, 0,
		0, 0, 204, 205, 5, 116, 0, 0, 205, 206, 5, 121, 0, 0, 206, 207, 5, 112,
		0, 0, 207, 208, 5, 101, 0, 0, 208, 58, 1, 0, 0, 0, 209, 210, 5, 115, 0,
		0, 210, 211, 5, 116, 0, 0, 211, 212, 5, 114, 0, 0, 212, 213, 5, 117, 0,
		0, 213, 214, 5, 99, 0, 0, 214, 215, 5, 116, 0, 0, 215, 60, 1, 0, 0, 0,
		216, 217, 5, 98, 0, 0, 217, 218, 5, 101, 0, 0, 218, 219, 5, 102, 0, 0,
		219, 220, 5, 111, 0, 0, 220, 221, 5, 114, 0, 0, 221, 222, 5, 101, 0, 0,
		222, 62, 1, 0, 0, 0, 223, 224, 5, 115, 0, 0, 224, 225, 5, 99, 0, 0, 225,
		226, 5, 104, 0, 0, 226, 227, 5, 101, 0, 0, 227, 228, 5, 109, 0, 0, 228,
		229, 5, 97, 0, 0, 229, 64, 1, 0, 0, 0, 230, 231, 5, 97, 0, 0, 231, 232,
		5, 102, 0, 0, 232, 233, 5, 116, 0, 0, 233, 234, 5, 101, 0, 0, 234, 235,
		5, 114, 0, 0, 235, 66, 1, 0, 0, 0, 236, 237, 5, 112, 0, 0, 237, 238, 5,
		97, 0, 0, 238, 239, 5, 114, 0, 0, 239, 240, 5, 115, 0, 0, 240, 241, 5,
		101, 0, 0, 241, 68, 1, 0, 0, 0, 242, 243, 5, 106, 0, 0, 243, 244, 5, 115,
		0, 0, 244, 245, 5, 111, 0, 0, 245, 246, 5, 110, 0, 0, 246, 247, 5, 102,
		0, 0, 247, 248, 5, 105, 0, 0, 248, 249, 5, 120, 0, 0, 249, 70, 1, 0, 0,
		0, 250, 254, 7, 2, 0, 0, 251, 253, 7, 3, 0, 0, 252, 251, 1, 0, 0, 0, 253,
		256, 1, 0, 0, 0, 254, 252, 1, 0, 0, 0, 254, 255, 1, 0, 0, 0, 255, 72, 1,
		0, 0, 0, 256, 254, 1, 0, 0, 0, 257, 263, 5, 34, 0, 0, 258, 262, 8, 4, 0,
		0, 259, 260, 5, 92, 0, 0, 260, 262, 9, 0, 0, 0, 261, 258, 1, 0, 0, 0, 261,
		259, 1, 0, 0, 0, 262, 265, 1, 0, 0, 0, 263, 261, 1, 0, 0, 0, 263, 264,
		1, 0, 0, 0, 264, 266, 1, 0, 0, 0, 265, 263, 1, 0, 0, 0, 266, 267, 5, 34,
		0, 0, 267, 74, 1, 0, 0, 0, 268, 270, 5, 45, 0, 0, 269, 268, 1, 0, 0, 0,
		269, 270, 1, 0, 0, 0, 270, 272, 1, 0, 0, 0, 271, 273, 7, 5, 0, 0, 272,
		271, 1, 0, 0, 0, 273, 274, 1, 0, 0, 0, 274, 272, 1, 0, 0, 0, 274, 275,
		1, 0, 0, 0, 275, 282, 1, 0, 0, 0, 276, 278, 5, 46, 0, 0, 277, 279, 7, 5,
		0, 0, 278, 277, 1, 0, 0, 0, 279, 280, 1, 0, 0, 0, 280, 278, 1, 0, 0, 0,
		280, 281, 1, 0, 0, 0, 281, 283, 1, 0, 0, 0, 282, 276, 1, 0, 0, 0, 282,
		283, 1, 0, 0, 0, 283, 76, 1, 0, 0, 0, 284, 285, 5, 116, 0, 0, 285, 286,
		5, 114, 0, 0, 286, 287, 5, 117, 0, 0, 287, 294, 5, 101, 0, 0, 288, 289,
		5, 102, 0, 0, 289, 290, 5, 97, 0, 0, 290, 291, 5, 108, 0, 0, 291, 292,
		5, 115, 0, 0, 292, 294, 5, 101, 0, 0, 293, 284, 1, 0, 0, 0, 293, 288, 1,
		0, 0, 0, 294, 78, 1, 0, 0, 0, 295, 296, 5, 124, 0, 0, 296, 80, 1, 0, 0,
		0, 297, 298, 5, 59, 0, 0, 298, 82, 1, 0, 0, 0, 299, 301, 7, 6, 0, 0, 300,
		299, 1, 0, 0, 0, 301, 302, 1, 0, 0, 0, 302, 300, 1, 0, 0, 0, 302, 303,
		1, 0, 0, 0, 303, 304, 1, 0, 0, 0, 304, 305, 6, 41, 0, 0, 305, 84, 1, 0,
		0, 0, 306, 307, 5, 47, 0, 0, 307, 308, 5, 47, 0, 0, 308, 312, 1, 0, 0,
		0, 309, 311, 8, 1, 0, 0, 310, 309, 1, 0, 0, 0, 311, 314, 1, 0, 0, 0, 312,
		310, 1, 0, 0, 0, 312, 313, 1, 0, 0, 0, 313, 315, 1, 0, 0, 0, 314, 312,
		1, 0, 0, 0, 315, 316, 6, 42, 0, 0, 316, 86, 1, 0, 0, 0, 317, 318, 5, 47,
		0, 0, 318, 319, 5, 42, 0, 0, 319, 323, 1, 0, 0, 0, 320, 322, 9, 0, 0, 0,
		321, 320, 1, 0, 0, 0, 322, 325, 1, 0, 0, 0, 323, 324, 1, 0, 0, 0, 323,
		321, 1, 0, 0, 0, 324, 326, 1, 0, 0, 0, 325, 323, 1, 0, 0, 0, 326, 327,
		5, 42, 0, 0, 327, 328, 5, 47, 0, 0, 328, 329, 1, 0, 0, 0, 329, 330, 6,
		43, 0, 0, 330, 88, 1, 0, 0, 0, 14, 0, 129, 131, 254, 261, 263, 269, 274,
		280, 282, 293, 302, 312, 323, 1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// PromptDSLLexerInit initializes any static state used to implement PromptDSLLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewPromptDSLLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func PromptDSLLexerInit() {
	staticData := &PromptDSLLexerLexerStaticData
	staticData.once.Do(promptdsllexerLexerInit)
}

// NewPromptDSLLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewPromptDSLLexer(input antlr.CharStream) *PromptDSLLexer {
	PromptDSLLexerInit()
	l := new(PromptDSLLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &PromptDSLLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "PromptDSL.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// PromptDSLLexer tokens.
const (
	PromptDSLLexerT__0             = 1
	PromptDSLLexerT__1             = 2
	PromptDSLLexerT__2             = 3
	PromptDSLLexerT__3             = 4
	PromptDSLLexerT__4             = 5
	PromptDSLLexerT__5             = 6
	PromptDSLLexerT__6             = 7
	PromptDSLLexerT__7             = 8
	PromptDSLLexerT__8             = 9
	PromptDSLLexerT__9             = 10
	PromptDSLLexerT__10            = 11
	PromptDSLLexerT__11            = 12
	PromptDSLLexerT__12            = 13
	PromptDSLLexerT__13            = 14
	PromptDSLLexerT__14            = 15
	PromptDSLLexerPLUS             = 16
	PromptDSLLexerJAVASCRIPT_BLOCK = 17
	PromptDSLLexerSTRING_TYPE      = 18
	PromptDSLLexerFLOAT_TYPE       = 19
	PromptDSLLexerINT_TYPE         = 20
	PromptDSLLexerPROMPT           = 21
	PromptDSLLexerPARAMS           = 22
	PromptDSLLexerSYSTEM           = 23
	PromptDSLLexerUSER             = 24
	PromptDSLLexerNOTE             = 25
	PromptDSLLexerINPUT            = 26
	PromptDSLLexerOUTPUT           = 27
	PromptDSLLexerFORMAT           = 28
	PromptDSLLexerTYPE             = 29
	PromptDSLLexerSTRUCT           = 30
	PromptDSLLexerBEFORE           = 31
	PromptDSLLexerSCHEMA           = 32
	PromptDSLLexerAFTER            = 33
	PromptDSLLexerPARSE            = 34
	PromptDSLLexerJSONFIX          = 35
	PromptDSLLexerID               = 36
	PromptDSLLexerSTRING           = 37
	PromptDSLLexerNUMBER           = 38
	PromptDSLLexerBOOL             = 39
	PromptDSLLexerPIPE             = 40
	PromptDSLLexerSEMI             = 41
	PromptDSLLexerWS               = 42
	PromptDSLLexerLINE_COMMENT     = 43
	PromptDSLLexerBLOCK_COMMENT    = 44
)
