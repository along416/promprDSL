// Code generated from ./promptdslcore/grammar/PromptDSLLexer.g4 by ANTLR 4.13.2. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type PromptDSLLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var PromptDSLLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func promptdsllexerLexerInit() {
	staticData := &PromptDSLLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE", "CODE_BLOCK",
	}
	staticData.LiteralNames = []string{
		"", "'string'", "'float'", "'int'", "'prompt'", "'params'", "'system'",
		"'user'", "'note'", "'input'", "'output'", "'format'", "'type'", "'struct'",
		"'before'", "'schema'", "'parse'", "'jsonfix'", "'markdown'", "'if'",
		"'else'", "'outputspec'", "'for'", "", "", "", "'{'", "", "'('", "')'",
		"':'", "'='", "','", "'.'", "'=='", "'!='", "'@'", "'md'", "'json'",
		"'['", "']'", "'++'", "'--'", "'-'", "'*'", "'/'", "'%'", "'+='", "'-='",
		"'*='", "'/='", "'%='", "'<'", "'<='", "'>'", "'>='", "", "", "", "",
		"'|'", "';'", "'+'",
	}
	staticData.SymbolicNames = []string{
		"", "STRING_TYPE", "FLOAT_TYPE", "INT_TYPE", "PROMPT", "PARAMS", "SYSTEM",
		"USER", "NOTE", "INPUT", "OUTPUT", "FORMAT", "TYPE", "STRUCT", "BEFORE",
		"SCHEMA", "PARSE", "JSONFIX", "MARKDOWN", "IF", "ELSE", "OUTPUTSPEC",
		"FOR", "FIX", "AFTER", "ARRAY_OUTPUTSPEC", "LBRACE", "RBRACE", "LPAREN",
		"RPAREN", "COLON", "EQUAL", "COMMA", "DOT", "EQEQ", "NOTEQ", "AT", "MD",
		"JSON", "LBRACK", "RBRACK", "INCREMENT", "DECREMENT", "MINUS", "STAR",
		"SLASH", "MOD", "PLUSEQ", "MINUSEQ", "MULTEQ", "DIVEQ", "MODEQ", "LT",
		"LTE", "GT", "GTE", "ID", "STRING", "NUMBER", "BOOL", "PIPE", "SEMI",
		"PLUS", "WS", "LINE_COMMENT", "BLOCK_COMMENT", "CODE_STRING", "CODE_TEXT",
	}
	staticData.RuleNames = []string{
		"STRING_TYPE", "FLOAT_TYPE", "INT_TYPE", "PROMPT", "PARAMS", "SYSTEM",
		"USER", "NOTE", "INPUT", "OUTPUT", "FORMAT", "TYPE", "STRUCT", "BEFORE",
		"SCHEMA", "PARSE", "JSONFIX", "MARKDOWN", "IF", "ELSE", "OUTPUTSPEC",
		"FOR", "FIX", "AFTER", "ARRAY_OUTPUTSPEC", "LBRACE", "RBRACE", "LPAREN",
		"RPAREN", "COLON", "EQUAL", "COMMA", "DOT", "EQEQ", "NOTEQ", "AT", "MD",
		"JSON", "LBRACK", "RBRACK", "INCREMENT", "DECREMENT", "MINUS", "STAR",
		"SLASH", "MOD", "PLUSEQ", "MINUSEQ", "MULTEQ", "DIVEQ", "MODEQ", "LT",
		"LTE", "GT", "GTE", "ID", "STRING", "NUMBER", "BOOL", "PIPE", "SEMI",
		"PLUS", "WS", "LINE_COMMENT", "BLOCK_COMMENT", "CODE_LBRACE", "CODE_RBRACE",
		"CODE_STRING", "CODE_STRING_CHAR", "CODE_TEXT",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 67, 505, 6, -1, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3,
		7, 3, 2, 4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9,
		7, 9, 2, 10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7,
		14, 2, 15, 7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19,
		2, 20, 7, 20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2,
		25, 7, 25, 2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30,
		7, 30, 2, 31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7,
		35, 2, 36, 7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40,
		2, 41, 7, 41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2,
		46, 7, 46, 2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51,
		7, 51, 2, 52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7,
		56, 2, 57, 7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61,
		2, 62, 7, 62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7, 65, 2, 66, 7, 66, 2,
		67, 7, 67, 2, 68, 7, 68, 2, 69, 7, 69, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
		0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
		3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1,
		4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1,
		6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1,
		8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 10,
		1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1,
		12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13,
		1, 13, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1,
		15, 1, 15, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16,
		1, 16, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1,
		18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1, 20,
		1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1,
		21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 5, 22, 288, 8, 22, 10, 22,
		12, 22, 291, 9, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1, 23, 1,
		23, 1, 23, 1, 23, 1, 23, 5, 23, 304, 8, 23, 10, 23, 12, 23, 307, 9, 23,
		1, 23, 1, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 24, 1, 24, 1, 25, 1, 25, 1,
		26, 1, 26, 1, 27, 1, 27, 1, 28, 1, 28, 1, 29, 1, 29, 1, 30, 1, 30, 1, 31,
		1, 31, 1, 32, 1, 32, 1, 33, 1, 33, 1, 33, 1, 34, 1, 34, 1, 34, 1, 35, 1,
		35, 1, 36, 1, 36, 1, 36, 1, 37, 1, 37, 1, 37, 1, 37, 1, 37, 1, 38, 1, 38,
		1, 39, 1, 39, 1, 40, 1, 40, 1, 40, 1, 41, 1, 41, 1, 41, 1, 42, 1, 42, 1,
		43, 1, 43, 1, 44, 1, 44, 1, 45, 1, 45, 1, 46, 1, 46, 1, 46, 1, 47, 1, 47,
		1, 47, 1, 48, 1, 48, 1, 48, 1, 49, 1, 49, 1, 49, 1, 50, 1, 50, 1, 50, 1,
		51, 1, 51, 1, 52, 1, 52, 1, 52, 1, 53, 1, 53, 1, 54, 1, 54, 1, 54, 1, 55,
		1, 55, 5, 55, 394, 8, 55, 10, 55, 12, 55, 397, 9, 55, 1, 56, 1, 56, 1,
		56, 1, 56, 5, 56, 403, 8, 56, 10, 56, 12, 56, 406, 9, 56, 1, 56, 1, 56,
		1, 57, 3, 57, 411, 8, 57, 1, 57, 4, 57, 414, 8, 57, 11, 57, 12, 57, 415,
		1, 57, 1, 57, 4, 57, 420, 8, 57, 11, 57, 12, 57, 421, 3, 57, 424, 8, 57,
		1, 58, 1, 58, 1, 58, 1, 58, 1, 58, 1, 58, 1, 58, 1, 58, 1, 58, 3, 58, 435,
		8, 58, 1, 59, 1, 59, 1, 60, 1, 60, 1, 61, 1, 61, 1, 62, 4, 62, 444, 8,
		62, 11, 62, 12, 62, 445, 1, 62, 1, 62, 1, 63, 1, 63, 1, 63, 1, 63, 5, 63,
		454, 8, 63, 10, 63, 12, 63, 457, 9, 63, 1, 63, 1, 63, 1, 64, 1, 64, 1,
		64, 1, 64, 5, 64, 465, 8, 64, 10, 64, 12, 64, 468, 9, 64, 1, 64, 1, 64,
		1, 64, 1, 64, 1, 64, 1, 65, 1, 65, 1, 65, 1, 65, 1, 65, 1, 66, 1, 66, 1,
		66, 1, 66, 1, 66, 1, 67, 1, 67, 5, 67, 487, 8, 67, 10, 67, 12, 67, 490,
		9, 67, 1, 67, 1, 67, 1, 68, 1, 68, 1, 68, 1, 68, 1, 68, 3, 68, 499, 8,
		68, 1, 69, 4, 69, 502, 8, 69, 11, 69, 12, 69, 503, 1, 466, 0, 70, 2, 1,
		4, 2, 6, 3, 8, 4, 10, 5, 12, 6, 14, 7, 16, 8, 18, 9, 20, 10, 22, 11, 24,
		12, 26, 13, 28, 14, 30, 15, 32, 16, 34, 17, 36, 18, 38, 19, 40, 20, 42,
		21, 44, 22, 46, 23, 48, 24, 50, 25, 52, 26, 54, 27, 56, 28, 58, 29, 60,
		30, 62, 31, 64, 32, 66, 33, 68, 34, 70, 35, 72, 36, 74, 37, 76, 38, 78,
		39, 80, 40, 82, 41, 84, 42, 86, 43, 88, 44, 90, 45, 92, 46, 94, 47, 96,
		48, 98, 49, 100, 50, 102, 51, 104, 52, 106, 53, 108, 54, 110, 55, 112,
		56, 114, 57, 116, 58, 118, 59, 120, 60, 122, 61, 124, 62, 126, 63, 128,
		64, 130, 65, 132, 0, 134, 0, 136, 66, 138, 0, 140, 67, 2, 0, 1, 8, 3, 0,
		65, 90, 95, 95, 97, 122, 4, 0, 48, 57, 65, 90, 95, 95, 97, 122, 2, 0, 34,
		34, 92, 92, 1, 0, 48, 57, 3, 0, 9, 10, 13, 13, 32, 32, 2, 0, 10, 10, 13,
		13, 4, 0, 10, 10, 13, 13, 34, 34, 92, 92, 3, 0, 34, 34, 123, 123, 125,
		125, 518, 0, 2, 1, 0, 0, 0, 0, 4, 1, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 8, 1,
		0, 0, 0, 0, 10, 1, 0, 0, 0, 0, 12, 1, 0, 0, 0, 0, 14, 1, 0, 0, 0, 0, 16,
		1, 0, 0, 0, 0, 18, 1, 0, 0, 0, 0, 20, 1, 0, 0, 0, 0, 22, 1, 0, 0, 0, 0,
		24, 1, 0, 0, 0, 0, 26, 1, 0, 0, 0, 0, 28, 1, 0, 0, 0, 0, 30, 1, 0, 0, 0,
		0, 32, 1, 0, 0, 0, 0, 34, 1, 0, 0, 0, 0, 36, 1, 0, 0, 0, 0, 38, 1, 0, 0,
		0, 0, 40, 1, 0, 0, 0, 0, 42, 1, 0, 0, 0, 0, 44, 1, 0, 0, 0, 0, 46, 1, 0,
		0, 0, 0, 48, 1, 0, 0, 0, 0, 50, 1, 0, 0, 0, 0, 52, 1, 0, 0, 0, 0, 54, 1,
		0, 0, 0, 0, 56, 1, 0, 0, 0, 0, 58, 1, 0, 0, 0, 0, 60, 1, 0, 0, 0, 0, 62,
		1, 0, 0, 0, 0, 64, 1, 0, 0, 0, 0, 66, 1, 0, 0, 0, 0, 68, 1, 0, 0, 0, 0,
		70, 1, 0, 0, 0, 0, 72, 1, 0, 0, 0, 0, 74, 1, 0, 0, 0, 0, 76, 1, 0, 0, 0,
		0, 78, 1, 0, 0, 0, 0, 80, 1, 0, 0, 0, 0, 82, 1, 0, 0, 0, 0, 84, 1, 0, 0,
		0, 0, 86, 1, 0, 0, 0, 0, 88, 1, 0, 0, 0, 0, 90, 1, 0, 0, 0, 0, 92, 1, 0,
		0, 0, 0, 94, 1, 0, 0, 0, 0, 96, 1, 0, 0, 0, 0, 98, 1, 0, 0, 0, 0, 100,
		1, 0, 0, 0, 0, 102, 1, 0, 0, 0, 0, 104, 1, 0, 0, 0, 0, 106, 1, 0, 0, 0,
		0, 108, 1, 0, 0, 0, 0, 110, 1, 0, 0, 0, 0, 112, 1, 0, 0, 0, 0, 114, 1,
		0, 0, 0, 0, 116, 1, 0, 0, 0, 0, 118, 1, 0, 0, 0, 0, 120, 1, 0, 0, 0, 0,
		122, 1, 0, 0, 0, 0, 124, 1, 0, 0, 0, 0, 126, 1, 0, 0, 0, 0, 128, 1, 0,
		0, 0, 0, 130, 1, 0, 0, 0, 1, 132, 1, 0, 0, 0, 1, 134, 1, 0, 0, 0, 1, 136,
		1, 0, 0, 0, 1, 140, 1, 0, 0, 0, 2, 142, 1, 0, 0, 0, 4, 149, 1, 0, 0, 0,
		6, 155, 1, 0, 0, 0, 8, 159, 1, 0, 0, 0, 10, 166, 1, 0, 0, 0, 12, 173, 1,
		0, 0, 0, 14, 180, 1, 0, 0, 0, 16, 185, 1, 0, 0, 0, 18, 190, 1, 0, 0, 0,
		20, 196, 1, 0, 0, 0, 22, 203, 1, 0, 0, 0, 24, 210, 1, 0, 0, 0, 26, 215,
		1, 0, 0, 0, 28, 222, 1, 0, 0, 0, 30, 229, 1, 0, 0, 0, 32, 236, 1, 0, 0,
		0, 34, 242, 1, 0, 0, 0, 36, 250, 1, 0, 0, 0, 38, 259, 1, 0, 0, 0, 40, 262,
		1, 0, 0, 0, 42, 267, 1, 0, 0, 0, 44, 278, 1, 0, 0, 0, 46, 282, 1, 0, 0,
		0, 48, 296, 1, 0, 0, 0, 50, 312, 1, 0, 0, 0, 52, 316, 1, 0, 0, 0, 54, 318,
		1, 0, 0, 0, 56, 320, 1, 0, 0, 0, 58, 322, 1, 0, 0, 0, 60, 324, 1, 0, 0,
		0, 62, 326, 1, 0, 0, 0, 64, 328, 1, 0, 0, 0, 66, 330, 1, 0, 0, 0, 68, 332,
		1, 0, 0, 0, 70, 335, 1, 0, 0, 0, 72, 338, 1, 0, 0, 0, 74, 340, 1, 0, 0,
		0, 76, 343, 1, 0, 0, 0, 78, 348, 1, 0, 0, 0, 80, 350, 1, 0, 0, 0, 82, 352,
		1, 0, 0, 0, 84, 355, 1, 0, 0, 0, 86, 358, 1, 0, 0, 0, 88, 360, 1, 0, 0,
		0, 90, 362, 1, 0, 0, 0, 92, 364, 1, 0, 0, 0, 94, 366, 1, 0, 0, 0, 96, 369,
		1, 0, 0, 0, 98, 372, 1, 0, 0, 0, 100, 375, 1, 0, 0, 0, 102, 378, 1, 0,
		0, 0, 104, 381, 1, 0, 0, 0, 106, 383, 1, 0, 0, 0, 108, 386, 1, 0, 0, 0,
		110, 388, 1, 0, 0, 0, 112, 391, 1, 0, 0, 0, 114, 398, 1, 0, 0, 0, 116,
		410, 1, 0, 0, 0, 118, 434, 1, 0, 0, 0, 120, 436, 1, 0, 0, 0, 122, 438,
		1, 0, 0, 0, 124, 440, 1, 0, 0, 0, 126, 443, 1, 0, 0, 0, 128, 449, 1, 0,
		0, 0, 130, 460, 1, 0, 0, 0, 132, 474, 1, 0, 0, 0, 134, 479, 1, 0, 0, 0,
		136, 484, 1, 0, 0, 0, 138, 498, 1, 0, 0, 0, 140, 501, 1, 0, 0, 0, 142,
		143, 5, 115, 0, 0, 143, 144, 5, 116, 0, 0, 144, 145, 5, 114, 0, 0, 145,
		146, 5, 105, 0, 0, 146, 147, 5, 110, 0, 0, 147, 148, 5, 103, 0, 0, 148,
		3, 1, 0, 0, 0, 149, 150, 5, 102, 0, 0, 150, 151, 5, 108, 0, 0, 151, 152,
		5, 111, 0, 0, 152, 153, 5, 97, 0, 0, 153, 154, 5, 116, 0, 0, 154, 5, 1,
		0, 0, 0, 155, 156, 5, 105, 0, 0, 156, 157, 5, 110, 0, 0, 157, 158, 5, 116,
		0, 0, 158, 7, 1, 0, 0, 0, 159, 160, 5, 112, 0, 0, 160, 161, 5, 114, 0,
		0, 161, 162, 5, 111, 0, 0, 162, 163, 5, 109, 0, 0, 163, 164, 5, 112, 0,
		0, 164, 165, 5, 116, 0, 0, 165, 9, 1, 0, 0, 0, 166, 167, 5, 112, 0, 0,
		167, 168, 5, 97, 0, 0, 168, 169, 5, 114, 0, 0, 169, 170, 5, 97, 0, 0, 170,
		171, 5, 109, 0, 0, 171, 172, 5, 115, 0, 0, 172, 11, 1, 0, 0, 0, 173, 174,
		5, 115, 0, 0, 174, 175, 5, 121, 0, 0, 175, 176, 5, 115, 0, 0, 176, 177,
		5, 116, 0, 0, 177, 178, 5, 101, 0, 0, 178, 179, 5, 109, 0, 0, 179, 13,
		1, 0, 0, 0, 180, 181, 5, 117, 0, 0, 181, 182, 5, 115, 0, 0, 182, 183, 5,
		101, 0, 0, 183, 184, 5, 114, 0, 0, 184, 15, 1, 0, 0, 0, 185, 186, 5, 110,
		0, 0, 186, 187, 5, 111, 0, 0, 187, 188, 5, 116, 0, 0, 188, 189, 5, 101,
		0, 0, 189, 17, 1, 0, 0, 0, 190, 191, 5, 105, 0, 0, 191, 192, 5, 110, 0,
		0, 192, 193, 5, 112, 0, 0, 193, 194, 5, 117, 0, 0, 194, 195, 5, 116, 0,
		0, 195, 19, 1, 0, 0, 0, 196, 197, 5, 111, 0, 0, 197, 198, 5, 117, 0, 0,
		198, 199, 5, 116, 0, 0, 199, 200, 5, 112, 0, 0, 200, 201, 5, 117, 0, 0,
		201, 202, 5, 116, 0, 0, 202, 21, 1, 0, 0, 0, 203, 204, 5, 102, 0, 0, 204,
		205, 5, 111, 0, 0, 205, 206, 5, 114, 0, 0, 206, 207, 5, 109, 0, 0, 207,
		208, 5, 97, 0, 0, 208, 209, 5, 116, 0, 0, 209, 23, 1, 0, 0, 0, 210, 211,
		5, 116, 0, 0, 211, 212, 5, 121, 0, 0, 212, 213, 5, 112, 0, 0, 213, 214,
		5, 101, 0, 0, 214, 25, 1, 0, 0, 0, 215, 216, 5, 115, 0, 0, 216, 217, 5,
		116, 0, 0, 217, 218, 5, 114, 0, 0, 218, 219, 5, 117, 0, 0, 219, 220, 5,
		99, 0, 0, 220, 221, 5, 116, 0, 0, 221, 27, 1, 0, 0, 0, 222, 223, 5, 98,
		0, 0, 223, 224, 5, 101, 0, 0, 224, 225, 5, 102, 0, 0, 225, 226, 5, 111,
		0, 0, 226, 227, 5, 114, 0, 0, 227, 228, 5, 101, 0, 0, 228, 29, 1, 0, 0,
		0, 229, 230, 5, 115, 0, 0, 230, 231, 5, 99, 0, 0, 231, 232, 5, 104, 0,
		0, 232, 233, 5, 101, 0, 0, 233, 234, 5, 109, 0, 0, 234, 235, 5, 97, 0,
		0, 235, 31, 1, 0, 0, 0, 236, 237, 5, 112, 0, 0, 237, 238, 5, 97, 0, 0,
		238, 239, 5, 114, 0, 0, 239, 240, 5, 115, 0, 0, 240, 241, 5, 101, 0, 0,
		241, 33, 1, 0, 0, 0, 242, 243, 5, 106, 0, 0, 243, 244, 5, 115, 0, 0, 244,
		245, 5, 111, 0, 0, 245, 246, 5, 110, 0, 0, 246, 247, 5, 102, 0, 0, 247,
		248, 5, 105, 0, 0, 248, 249, 5, 120, 0, 0, 249, 35, 1, 0, 0, 0, 250, 251,
		5, 109, 0, 0, 251, 252, 5, 97, 0, 0, 252, 253, 5, 114, 0, 0, 253, 254,
		5, 107, 0, 0, 254, 255, 5, 100, 0, 0, 255, 256, 5, 111, 0, 0, 256, 257,
		5, 119, 0, 0, 257, 258, 5, 110, 0, 0, 258, 37, 1, 0, 0, 0, 259, 260, 5,
		105, 0, 0, 260, 261, 5, 102, 0, 0, 261, 39, 1, 0, 0, 0, 262, 263, 5, 101,
		0, 0, 263, 264, 5, 108, 0, 0, 264, 265, 5, 115, 0, 0, 265, 266, 5, 101,
		0, 0, 266, 41, 1, 0, 0, 0, 267, 268, 5, 111, 0, 0, 268, 269, 5, 117, 0,
		0, 269, 270, 5, 116, 0, 0, 270, 271, 5, 112, 0, 0, 271, 272, 5, 117, 0,
		0, 272, 273, 5, 116, 0, 0, 273, 274, 5, 115, 0, 0, 274, 275, 5, 112, 0,
		0, 275, 276, 5, 101, 0, 0, 276, 277, 5, 99, 0, 0, 277, 43, 1, 0, 0, 0,
		278, 279, 5, 102, 0, 0, 279, 280, 5, 111, 0, 0, 280, 281, 5, 114, 0, 0,
		281, 45, 1, 0, 0, 0, 282, 283, 5, 102, 0, 0, 283, 284, 5, 105, 0, 0, 284,
		285, 5, 120, 0, 0, 285, 289, 1, 0, 0, 0, 286, 288, 3, 126, 62, 0, 287,
		286, 1, 0, 0, 0, 288, 291, 1, 0, 0, 0, 289, 287, 1, 0, 0, 0, 289, 290,
		1, 0, 0, 0, 290, 292, 1, 0, 0, 0, 291, 289, 1, 0, 0, 0, 292, 293, 5, 123,
		0, 0, 293, 294, 1, 0, 0, 0, 294, 295, 6, 22, 0, 0, 295, 47, 1, 0, 0, 0,
		296, 297, 5, 97, 0, 0, 297, 298, 5, 102, 0, 0, 298, 299, 5, 116, 0, 0,
		299, 300, 5, 101, 0, 0, 300, 301, 5, 114, 0, 0, 301, 305, 1, 0, 0, 0, 302,
		304, 3, 126, 62, 0, 303, 302, 1, 0, 0, 0, 304, 307, 1, 0, 0, 0, 305, 303,
		1, 0, 0, 0, 305, 306, 1, 0, 0, 0, 306, 308, 1, 0, 0, 0, 307, 305, 1, 0,
		0, 0, 308, 309, 5, 123, 0, 0, 309, 310, 1, 0, 0, 0, 310, 311, 6, 23, 0,
		0, 311, 49, 1, 0, 0, 0, 312, 313, 5, 91, 0, 0, 313, 314, 5, 93, 0, 0, 314,
		315, 3, 42, 20, 0, 315, 51, 1, 0, 0, 0, 316, 317, 5, 123, 0, 0, 317, 53,
		1, 0, 0, 0, 318, 319, 5, 125, 0, 0, 319, 55, 1, 0, 0, 0, 320, 321, 5, 40,
		0, 0, 321, 57, 1, 0, 0, 0, 322, 323, 5, 41, 0, 0, 323, 59, 1, 0, 0, 0,
		324, 325, 5, 58, 0, 0, 325, 61, 1, 0, 0, 0, 326, 327, 5, 61, 0, 0, 327,
		63, 1, 0, 0, 0, 328, 329, 5, 44, 0, 0, 329, 65, 1, 0, 0, 0, 330, 331, 5,
		46, 0, 0, 331, 67, 1, 0, 0, 0, 332, 333, 5, 61, 0, 0, 333, 334, 5, 61,
		0, 0, 334, 69, 1, 0, 0, 0, 335, 336, 5, 33, 0, 0, 336, 337, 5, 61, 0, 0,
		337, 71, 1, 0, 0, 0, 338, 339, 5, 64, 0, 0, 339, 73, 1, 0, 0, 0, 340, 341,
		5, 109, 0, 0, 341, 342, 5, 100, 0, 0, 342, 75, 1, 0, 0, 0, 343, 344, 5,
		106, 0, 0, 344, 345, 5, 115, 0, 0, 345, 346, 5, 111, 0, 0, 346, 347, 5,
		110, 0, 0, 347, 77, 1, 0, 0, 0, 348, 349, 5, 91, 0, 0, 349, 79, 1, 0, 0,
		0, 350, 351, 5, 93, 0, 0, 351, 81, 1, 0, 0, 0, 352, 353, 5, 43, 0, 0, 353,
		354, 5, 43, 0, 0, 354, 83, 1, 0, 0, 0, 355, 356, 5, 45, 0, 0, 356, 357,
		5, 45, 0, 0, 357, 85, 1, 0, 0, 0, 358, 359, 5, 45, 0, 0, 359, 87, 1, 0,
		0, 0, 360, 361, 5, 42, 0, 0, 361, 89, 1, 0, 0, 0, 362, 363, 5, 47, 0, 0,
		363, 91, 1, 0, 0, 0, 364, 365, 5, 37, 0, 0, 365, 93, 1, 0, 0, 0, 366, 367,
		5, 43, 0, 0, 367, 368, 5, 61, 0, 0, 368, 95, 1, 0, 0, 0, 369, 370, 5, 45,
		0, 0, 370, 371, 5, 61, 0, 0, 371, 97, 1, 0, 0, 0, 372, 373, 5, 42, 0, 0,
		373, 374, 5, 61, 0, 0, 374, 99, 1, 0, 0, 0, 375, 376, 5, 47, 0, 0, 376,
		377, 5, 61, 0, 0, 377, 101, 1, 0, 0, 0, 378, 379, 5, 37, 0, 0, 379, 380,
		5, 61, 0, 0, 380, 103, 1, 0, 0, 0, 381, 382, 5, 60, 0, 0, 382, 105, 1,
		0, 0, 0, 383, 384, 5, 60, 0, 0, 384, 385, 5, 61, 0, 0, 385, 107, 1, 0,
		0, 0, 386, 387, 5, 62, 0, 0, 387, 109, 1, 0, 0, 0, 388, 389, 5, 62, 0,
		0, 389, 390, 5, 61, 0, 0, 390, 111, 1, 0, 0, 0, 391, 395, 7, 0, 0, 0, 392,
		394, 7, 1, 0, 0, 393, 392, 1, 0, 0, 0, 394, 397, 1, 0, 0, 0, 395, 393,
		1, 0, 0, 0, 395, 396, 1, 0, 0, 0, 396, 113, 1, 0, 0, 0, 397, 395, 1, 0,
		0, 0, 398, 404, 5, 34, 0, 0, 399, 403, 8, 2, 0, 0, 400, 401, 5, 92, 0,
		0, 401, 403, 9, 0, 0, 0, 402, 399, 1, 0, 0, 0, 402, 400, 1, 0, 0, 0, 403,
		406, 1, 0, 0, 0, 404, 402, 1, 0, 0, 0, 404, 405, 1, 0, 0, 0, 405, 407,
		1, 0, 0, 0, 406, 404, 1, 0, 0, 0, 407, 408, 5, 34, 0, 0, 408, 115, 1, 0,
		0, 0, 409, 411, 5, 45, 0, 0, 410, 409, 1, 0, 0, 0, 410, 411, 1, 0, 0, 0,
		411, 413, 1, 0, 0, 0, 412, 414, 7, 3, 0, 0, 413, 412, 1, 0, 0, 0, 414,
		415, 1, 0, 0, 0, 415, 413, 1, 0, 0, 0, 415, 416, 1, 0, 0, 0, 416, 423,
		1, 0, 0, 0, 417, 419, 5, 46, 0, 0, 418, 420, 7, 3, 0, 0, 419, 418, 1, 0,
		0, 0, 420, 421, 1, 0, 0, 0, 421, 419, 1, 0, 0, 0, 421, 422, 1, 0, 0, 0,
		422, 424, 1, 0, 0, 0, 423, 417, 1, 0, 0, 0, 423, 424, 1, 0, 0, 0, 424,
		117, 1, 0, 0, 0, 425, 426, 5, 116, 0, 0, 426, 427, 5, 114, 0, 0, 427, 428,
		5, 117, 0, 0, 428, 435, 5, 101, 0, 0, 429, 430, 5, 102, 0, 0, 430, 431,
		5, 97, 0, 0, 431, 432, 5, 108, 0, 0, 432, 433, 5, 115, 0, 0, 433, 435,
		5, 101, 0, 0, 434, 425, 1, 0, 0, 0, 434, 429, 1, 0, 0, 0, 435, 119, 1,
		0, 0, 0, 436, 437, 5, 124, 0, 0, 437, 121, 1, 0, 0, 0, 438, 439, 5, 59,
		0, 0, 439, 123, 1, 0, 0, 0, 440, 441, 5, 43, 0, 0, 441, 125, 1, 0, 0, 0,
		442, 444, 7, 4, 0, 0, 443, 442, 1, 0, 0, 0, 444, 445, 1, 0, 0, 0, 445,
		443, 1, 0, 0, 0, 445, 446, 1, 0, 0, 0, 446, 447, 1, 0, 0, 0, 447, 448,
		6, 62, 1, 0, 448, 127, 1, 0, 0, 0, 449, 450, 5, 47, 0, 0, 450, 451, 5,
		47, 0, 0, 451, 455, 1, 0, 0, 0, 452, 454, 8, 5, 0, 0, 453, 452, 1, 0, 0,
		0, 454, 457, 1, 0, 0, 0, 455, 453, 1, 0, 0, 0, 455, 456, 1, 0, 0, 0, 456,
		458, 1, 0, 0, 0, 457, 455, 1, 0, 0, 0, 458, 459, 6, 63, 1, 0, 459, 129,
		1, 0, 0, 0, 460, 461, 5, 47, 0, 0, 461, 462, 5, 42, 0, 0, 462, 466, 1,
		0, 0, 0, 463, 465, 9, 0, 0, 0, 464, 463, 1, 0, 0, 0, 465, 468, 1, 0, 0,
		0, 466, 467, 1, 0, 0, 0, 466, 464, 1, 0, 0, 0, 467, 469, 1, 0, 0, 0, 468,
		466, 1, 0, 0, 0, 469, 470, 5, 42, 0, 0, 470, 471, 5, 47, 0, 0, 471, 472,
		1, 0, 0, 0, 472, 473, 6, 64, 1, 0, 473, 131, 1, 0, 0, 0, 474, 475, 5, 123,
		0, 0, 475, 476, 1, 0, 0, 0, 476, 477, 6, 65, 2, 0, 477, 478, 6, 65, 0,
		0, 478, 133, 1, 0, 0, 0, 479, 480, 5, 125, 0, 0, 480, 481, 1, 0, 0, 0,
		481, 482, 6, 66, 3, 0, 482, 483, 6, 66, 4, 0, 483, 135, 1, 0, 0, 0, 484,
		488, 5, 34, 0, 0, 485, 487, 3, 138, 68, 0, 486, 485, 1, 0, 0, 0, 487, 490,
		1, 0, 0, 0, 488, 486, 1, 0, 0, 0, 488, 489, 1, 0, 0, 0, 489, 491, 1, 0,
		0, 0, 490, 488, 1, 0, 0, 0, 491, 492, 5, 34, 0, 0, 492, 137, 1, 0, 0, 0,
		493, 499, 8, 6, 0, 0, 494, 495, 5, 92, 0, 0, 495, 496, 5, 92, 0, 0, 496,
		497, 1, 0, 0, 0, 497, 499, 9, 0, 0, 0, 498, 493, 1, 0, 0, 0, 498, 494,
		1, 0, 0, 0, 499, 139, 1, 0, 0, 0, 500, 502, 8, 7, 0, 0, 501, 500, 1, 0,
		0, 0, 502, 503, 1, 0, 0, 0, 503, 501, 1, 0, 0, 0, 503, 504, 1, 0, 0, 0,
		504, 141, 1, 0, 0, 0, 18, 0, 1, 289, 305, 395, 402, 404, 410, 415, 421,
		423, 434, 445, 455, 466, 488, 498, 503, 5, 5, 1, 0, 0, 1, 0, 7, 26, 0,
		7, 27, 0, 4, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// PromptDSLLexerInit initializes any static state used to implement PromptDSLLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewPromptDSLLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func PromptDSLLexerInit() {
	staticData := &PromptDSLLexerLexerStaticData
	staticData.once.Do(promptdsllexerLexerInit)
}

// NewPromptDSLLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewPromptDSLLexer(input antlr.CharStream) *PromptDSLLexer {
	PromptDSLLexerInit()
	l := new(PromptDSLLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &PromptDSLLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "PromptDSLLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// PromptDSLLexer tokens.
const (
	PromptDSLLexerSTRING_TYPE      = 1
	PromptDSLLexerFLOAT_TYPE       = 2
	PromptDSLLexerINT_TYPE         = 3
	PromptDSLLexerPROMPT           = 4
	PromptDSLLexerPARAMS           = 5
	PromptDSLLexerSYSTEM           = 6
	PromptDSLLexerUSER             = 7
	PromptDSLLexerNOTE             = 8
	PromptDSLLexerINPUT            = 9
	PromptDSLLexerOUTPUT           = 10
	PromptDSLLexerFORMAT           = 11
	PromptDSLLexerTYPE             = 12
	PromptDSLLexerSTRUCT           = 13
	PromptDSLLexerBEFORE           = 14
	PromptDSLLexerSCHEMA           = 15
	PromptDSLLexerPARSE            = 16
	PromptDSLLexerJSONFIX          = 17
	PromptDSLLexerMARKDOWN         = 18
	PromptDSLLexerIF               = 19
	PromptDSLLexerELSE             = 20
	PromptDSLLexerOUTPUTSPEC       = 21
	PromptDSLLexerFOR              = 22
	PromptDSLLexerFIX              = 23
	PromptDSLLexerAFTER            = 24
	PromptDSLLexerARRAY_OUTPUTSPEC = 25
	PromptDSLLexerLBRACE           = 26
	PromptDSLLexerRBRACE           = 27
	PromptDSLLexerLPAREN           = 28
	PromptDSLLexerRPAREN           = 29
	PromptDSLLexerCOLON            = 30
	PromptDSLLexerEQUAL            = 31
	PromptDSLLexerCOMMA            = 32
	PromptDSLLexerDOT              = 33
	PromptDSLLexerEQEQ             = 34
	PromptDSLLexerNOTEQ            = 35
	PromptDSLLexerAT               = 36
	PromptDSLLexerMD               = 37
	PromptDSLLexerJSON             = 38
	PromptDSLLexerLBRACK           = 39
	PromptDSLLexerRBRACK           = 40
	PromptDSLLexerINCREMENT        = 41
	PromptDSLLexerDECREMENT        = 42
	PromptDSLLexerMINUS            = 43
	PromptDSLLexerSTAR             = 44
	PromptDSLLexerSLASH            = 45
	PromptDSLLexerMOD              = 46
	PromptDSLLexerPLUSEQ           = 47
	PromptDSLLexerMINUSEQ          = 48
	PromptDSLLexerMULTEQ           = 49
	PromptDSLLexerDIVEQ            = 50
	PromptDSLLexerMODEQ            = 51
	PromptDSLLexerLT               = 52
	PromptDSLLexerLTE              = 53
	PromptDSLLexerGT               = 54
	PromptDSLLexerGTE              = 55
	PromptDSLLexerID               = 56
	PromptDSLLexerSTRING           = 57
	PromptDSLLexerNUMBER           = 58
	PromptDSLLexerBOOL             = 59
	PromptDSLLexerPIPE             = 60
	PromptDSLLexerSEMI             = 61
	PromptDSLLexerPLUS             = 62
	PromptDSLLexerWS               = 63
	PromptDSLLexerLINE_COMMENT     = 64
	PromptDSLLexerBLOCK_COMMENT    = 65
	PromptDSLLexerCODE_STRING      = 66
	PromptDSLLexerCODE_TEXT        = 67
)

// PromptDSLLexerCODE_BLOCK is the PromptDSLLexer mode.
const PromptDSLLexerCODE_BLOCK = 1
