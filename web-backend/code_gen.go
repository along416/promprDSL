// Code generated by PromptDSL. DO NOT EDIT.
package main

import (
	"fmt"
	"math"
	"strings"
)

type InputContext struct {
	question string `json:"question"`
}

type OutputContext struct {
	Conditions     []string `json:"条件"`
	KnowledgePoint string   `json:"知识点"`
	ProcessResult  bool     `json:"过程"`
}

type FinalContext struct {
	Input  InputContext
	Output []OutputContext
}

func AfterProcess(output []OutputContext) []OutputContext {

	trueCount := 0
	for _, item := range output {
		if item.ProcessResult {
			trueCount++
		}
		fmt.Printf("知识点：%s，条件数：%d\n", item.KnowledgePoint, len(item.Conditions))
	}

	fmt.Printf("✅ 拆解成功步骤数（过程=true）：%d / %d\n", trueCount, len(output))
	return output

}

func FixProcess(output []OutputContext) []OutputContext {

	for i := range output {
		// 如果知识点为空，填入默认值
		if strings.TrimSpace(output[i].KnowledgePoint) == "" {
			output[i].KnowledgePoint = "默认知识点"
		}

		// 清理条件中的空格
		for j, cond := range output[i].Conditions {
			output[i].Conditions[j] = strings.TrimSpace(cond)
		}

		// 示例：使用 math.Abs 模拟对结果进行微调（无实际数值字段，仅示例用法）
		delta := math.Abs(float64(len(output[i].KnowledgePoint)) - 5.0)
		if delta > 10 {
			output[i].ProcessResult = false
		}
	}
	return output

}
