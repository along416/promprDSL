2025/07/31 00:02:37 test.go:38: 开始处理文件： SplitSolutionSteps.prompt
2025/07/31 00:02:37 runner.go:65: 安装依赖失败: failed to go get github.com/antlr/antlr4/runtime/Go/antlr/v4 : exit status 1
Output: go: module github.com/antlr/antlr4/runtime/Go/antlr@upgrade found (v1.4.10), but does not contain package github.com/antlr/antlr4/runtime/Go/antlr/v4 
2025/07/31 00:07:33 test.go:38: 开始处理文件： SplitSolutionSteps.prompt
2025/07/31 00:07:55 runner.go:65: 安装依赖失败: failed to go get github.com/summer-camp-k12/homework-coach: exit status 1
Output: go: downloading github.com/summer-camp-k12/homework-coach v1.0.4
go: github.com/summer-camp-k12/homework-coach@v1.0.4: verifying module: github.com/summer-camp-k12/homework-coach@v1.0.4: reading https://goproxy.cn/sumdb/sum.golang.org/lookup/github.com/summer-camp-k12/homework-coach@v1.0.4: 404 Not Found
	server response:
	not found: github.com/summer-camp-k12/homework-coach@v1.0.4: invalid version: git ls-remote -q origin in /tmp/gopath/pkg/mod/cache/vcs/1b3440bfd106bd1b6373badbbafdb604971036092bcfa6763254386b52a1361f: exit status 128:
		fatal: could not read Username for 'https://github.com': terminal prompts disabled
	Confirm the import path was entered correctly.
	If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2025/07/31 00:09:12 test.go:38: 开始处理文件： SplitSolutionSteps.prompt
2025/07/31 00:09:22 runner.go:67: 安装依赖失败: failed to go get github.com/summer-camp-k12/homework-coach: exit status 1
Output: go: downloading github.com/summer-camp-k12/homework-coach v1.0.4
go: github.com/summer-camp-k12/homework-coach@v1.0.4: verifying module: github.com/summer-camp-k12/homework-coach@v1.0.4: reading https://goproxy.cn/sumdb/sum.golang.org/lookup/github.com/summer-camp-k12/homework-coach@v1.0.4: 404 Not Found
	server response:
	not found: github.com/summer-camp-k12/homework-coach@v1.0.4: invalid version: git ls-remote -q origin in /tmp/gopath/pkg/mod/cache/vcs/1b3440bfd106bd1b6373badbbafdb604971036092bcfa6763254386b52a1361f: exit status 128:
		fatal: could not read Username for 'https://github.com': terminal prompts disabled
	Confirm the import path was entered correctly.
	If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2025/07/31 00:10:30 test.go:38: 开始处理文件： SplitSolutionSteps.prompt
2025/07/31 00:10:31 test.go:60: 生成的 Prompt:
 &{[b.WriteString("请根据以下输入题目及其解答内容，将完整的解答过程拆分为多个“短链”，每个“短链”包含以下三个要素：\n") if (in.Question!="") {     b.WriteString("你好\n") } else {     b.WriteString("siuehfebn\n") } b.WriteString("条件，知识点，结果\n") b.WriteString("题目：\n") b.WriteString(in.Question) b.WriteString("过程：\n") for i := range in.Process {     b.WriteString(in.Process[i]) } switch in.Process[0] { case "a":     b.WriteString("你好\n") case "b":     b.WriteString("你好2\n") default:     b.WriteString("你好3\n") } b.WriteString("请将输出内容严格按照以下格式返回：\n")     b.WriteString("```json\n")
    b.WriteString("[\n")
    b.WriteString("  {\n")
    b.WriteString("    \"条件\": [\"\"]  // 严格遵守以下规定设计数学公式使用标准通用的latex格式,数学公式以美元符号包裹，$或$$与公式内容之间不允许有任何空格,\n")
    b.WriteString("    \"知识点\": \"\"  // 严格遵守以下规定设计数学公式使用标准通用的latex格式,数学公式以美元符号包裹，$或$$与公式内容之间不允许有任何空格,\n")
    b.WriteString("    \"过程\": \"\"  // 严格遵守以下规定设计数学公式使用标准通用的latex格式,数学公式以美元符号包裹，$或$$与公式内容之间不允许有任何空格\n")
    b.WriteString("  }\n")
    b.WriteString("]\n")
    b.WriteString("```\n")
 b.WriteString("特别提醒：本题可能涉及 extra_hint，请根据步骤合理提取对应知识点。\n")] [b.WriteString("你是一个擅长拆分解题步骤的数学老师\n") if (in.Question=="") {     b.WriteString("当前任务是将解题步骤进行合理拆分\n") } else {     b.WriteString("当前任务是将解题步骤进行合理拆分2\n") }]}
2025/07/31 00:41:55 test.go:38: 开始处理文件： SplitSolutionSteps.prompt
2025/07/31 00:41:56 test.go:60: 生成的 Prompt:
 &{[b.WriteString("请根据以下输入题目及其解答内容，将完整的解答过程拆分为多个“短链”，每个“短链”包含以下三个要素：\n") if (in.Question!="") {     b.WriteString("你好\n") } else {     b.WriteString("siuehfebn\n") } b.WriteString("条件，知识点，结果\n") b.WriteString("题目：\n") b.WriteString(in.Question) b.WriteString("过程：\n") for i := range in.Process {     b.WriteString(in.Process[i]) } switch in.Process[0] { case "a":     b.WriteString("你好\n") case "b":     b.WriteString("你好2\n") default:     b.WriteString("你好3\n") } b.WriteString("请将输出内容严格按照以下格式返回：\n")     b.WriteString("```json\n")
    b.WriteString("[\n")
    b.WriteString("  {\n")
    b.WriteString("    \"条件\": [\"\"]  // 严格遵守以下规定设计数学公式使用标准通用的latex格式,数学公式以美元符号包裹，$或$$与公式内容之间不允许有任何空格,\n")
    b.WriteString("    \"知识点\": \"\"  // 严格遵守以下规定设计数学公式使用标准通用的latex格式,数学公式以美元符号包裹，$或$$与公式内容之间不允许有任何空格,\n")
    b.WriteString("    \"过程\": \"\"  // 严格遵守以下规定设计数学公式使用标准通用的latex格式,数学公式以美元符号包裹，$或$$与公式内容之间不允许有任何空格\n")
    b.WriteString("  }\n")
    b.WriteString("]\n")
    b.WriteString("```\n")
 b.WriteString("特别提醒：本题可能涉及 extra_hint，请根据步骤合理提取对应知识点。\n")] [b.WriteString("你是一个擅长拆分解题步骤的数学老师\n") if (in.Question=="") {     b.WriteString("当前任务是将解题步骤进行合理拆分\n") } else {     b.WriteString("当前任务是将解题步骤进行合理拆分2\n") }]}
2025/07/31 00:42:15 test.go:38: 开始处理文件： SplitSolutionSteps.prompt
2025/07/31 00:42:15 test.go:60: 生成的 Prompt:
 &{[b.WriteString("请根据以下输入题目及其解答内容，将完整的解答过程拆分为多个“短链”，每个“短链”包含以下三个要素：\n") if (in.Question!="") {     b.WriteString("你好\n") } else {     b.WriteString("siuehfebn\n") } b.WriteString("条件，知识点，结果\n") b.WriteString("题目：\n") b.WriteString(in.Question) b.WriteString("过程：\n") for i := range in.Process {     b.WriteString(in.Process[i]) } switch in.Process[0] { case "a":     b.WriteString("你好\n") case "b":     b.WriteString("你好2\n") default:     b.WriteString("你好3\n") } b.WriteString("请将输出内容严格按照以下格式返回：\n")     b.WriteString("```json\n")
    b.WriteString("[\n")
    b.WriteString("  {\n")
    b.WriteString("    \"条件\": [\"\"]  // 严格遵守以下规定设计数学公式使用标准通用的latex格式,数学公式以美元符号包裹，$或$$与公式内容之间不允许有任何空格,\n")
    b.WriteString("    \"知识点\": \"\"  // 严格遵守以下规定设计数学公式使用标准通用的latex格式,数学公式以美元符号包裹，$或$$与公式内容之间不允许有任何空格,\n")
    b.WriteString("    \"过程\": \"\"  // 严格遵守以下规定设计数学公式使用标准通用的latex格式,数学公式以美元符号包裹，$或$$与公式内容之间不允许有任何空格\n")
    b.WriteString("  }\n")
    b.WriteString("]\n")
    b.WriteString("```\n")
 b.WriteString("特别提醒：本题可能涉及 extra_hint，请根据步骤合理提取对应知识点。\n")] [b.WriteString("你是一个擅长拆分解题步骤的数学老师\n") if (in.Question=="") {     b.WriteString("当前任务是将解题步骤进行合理拆分\n") } else {     b.WriteString("当前任务是将解题步骤进行合理拆分2\n") }]}
2025/07/31 00:48:41 test.go:38: 开始处理文件： SplitSolutionSteps.prompt
2025/07/31 00:51:02 test.go:38: 开始处理文件： SplitSolutionSteps.prompt
2025/07/31 00:51:16 test.go:38: 开始处理文件： SplitSolutionSteps.prompt
2025/07/31 00:52:07 test.go:38: 开始处理文件： SplitSolutionSteps.prompt
2025/07/31 00:54:25 test.go:38: 开始处理文件： SplitSolutionSteps.prompt
2025/07/31 00:54:26 test.go:60: 生成的 Prompt:
 &{[b.WriteString("请根据以下输入题目及其解答内容，将完整的解答过程拆分为多个“短链”，每个“短链”包含以下三个要素：\n") if (in.Question!="") {     b.WriteString("你好\n") } else {     b.WriteString("siuehfebn\n") } b.WriteString("条件，知识点，结果\n") b.WriteString("题目：\n") b.WriteString(in.Question) b.WriteString("过程：\n") for i := range in.Process {     b.WriteString(in.Process[i]) } switch in.Process[0] { case "a":     b.WriteString("你好\n") case "b":     b.WriteString("你好2\n") default:     b.WriteString("你好3\n") } b.WriteString("请将输出内容严格按照以下格式返回：\n")     b.WriteString("```json\n")
    b.WriteString("[\n")
    b.WriteString("  {\n")
    b.WriteString("    \"条件\": [\"\"]  // 严格遵守以下规定设计数学公式使用标准通用的latex格式,数学公式以美元符号包裹，$或$$与公式内容之间不允许有任何空格,\n")
    b.WriteString("    \"知识点\": \"\"  // 严格遵守以下规定设计数学公式使用标准通用的latex格式,数学公式以美元符号包裹，$或$$与公式内容之间不允许有任何空格,\n")
    b.WriteString("    \"过程\": \"\"  // 严格遵守以下规定设计数学公式使用标准通用的latex格式,数学公式以美元符号包裹，$或$$与公式内容之间不允许有任何空格\n")
    b.WriteString("  }\n")
    b.WriteString("]\n")
    b.WriteString("```\n")
 b.WriteString("特别提醒：本题可能涉及 extra_hint，请根据步骤合理提取对应知识点。\n")] [b.WriteString("你是一个擅长拆分解题步骤的数学老师\n") if (in.Question=="") {     b.WriteString("当前任务是将解题步骤进行合理拆分\n") } else {     b.WriteString("当前任务是将解题步骤进行合理拆分2\n") }]}
